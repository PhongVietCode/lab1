ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB72:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "software_time.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_TIM2_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** enum lightState
  60:Core/Src/main.c **** {
  61:Core/Src/main.c ****   RED1_GREEN2,
  62:Core/Src/main.c ****   RED1_YELLOW2,
  63:Core/Src/main.c ****   GREEN1_RED2,
  64:Core/Src/main.c ****   YELLOW1_RED2,
  65:Core/Src/main.c **** };
  66:Core/Src/main.c **** int currentState = RED1_GREEN2;
  67:Core/Src/main.c **** int nextState = 0;
  68:Core/Src/main.c **** void clearAllLed()
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, 1);
  71:Core/Src/main.c ****   HAL_GPIO_WritePin(YELLOW1_GPIO_Port, YELLOW1_Pin, 1);
  72:Core/Src/main.c ****   HAL_GPIO_WritePin(GREEN1_GPIO_Port, GREEN1_Pin, 1);
  73:Core/Src/main.c ****   HAL_GPIO_WritePin(RED2_GPIO_Port, RED2_Pin, 1);
  74:Core/Src/main.c ****   HAL_GPIO_WritePin(YELLOW2_GPIO_Port, YELLOW2_Pin, 1);
  75:Core/Src/main.c ****   HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 1);
  76:Core/Src/main.c **** }
  77:Core/Src/main.c **** /// @brief
  78:Core/Src/main.c **** /// @param state: RED1_GREEN2 -> RED1_YELLOW2 -> YELLOW1_RED2 -> GREEN1_RED2 ->  RED1_YELLOW2...
  79:Core/Src/main.c **** /// @return
  80:Core/Src/main.c **** int changeState(int state)
  81:Core/Src/main.c **** {
  82:Core/Src/main.c ****   clearAllLed();
  83:Core/Src/main.c ****   switch (state)
  84:Core/Src/main.c ****   {
  85:Core/Src/main.c ****   case RED1_GREEN2:
  86:Core/Src/main.c ****     HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, 0);
  87:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 0);
  88:Core/Src/main.c ****     nextState = 1;
  89:Core/Src/main.c ****     return 300;
  90:Core/Src/main.c ****   case RED1_YELLOW2:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 3


  91:Core/Src/main.c ****     HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, 0);
  92:Core/Src/main.c ****     HAL_GPIO_WritePin(YELLOW2_GPIO_Port, YELLOW2_Pin, 0);
  93:Core/Src/main.c ****     nextState = 2;
  94:Core/Src/main.c ****     return 200;
  95:Core/Src/main.c ****   case GREEN1_RED2:
  96:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN1_GPIO_Port, GREEN1_Pin, 0);
  97:Core/Src/main.c ****     HAL_GPIO_WritePin(RED2_GPIO_Port, RED2_Pin, 0);
  98:Core/Src/main.c ****     nextState = 3;
  99:Core/Src/main.c ****     return 300;
 100:Core/Src/main.c ****   case YELLOW1_RED2:
 101:Core/Src/main.c ****     HAL_GPIO_WritePin(YELLOW1_GPIO_Port, YELLOW1_Pin, 0);
 102:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 0);
 103:Core/Src/main.c ****     nextState = 0;
 104:Core/Src/main.c ****     return 200;
 105:Core/Src/main.c ****   default:
 106:Core/Src/main.c ****     return 0;
 107:Core/Src/main.c ****   }
 108:Core/Src/main.c **** }
 109:Core/Src/main.c **** int num0[] = {0, 0, 0, 0, 0, 0, 1};
 110:Core/Src/main.c **** int num1[] = {1, 0, 0, 1, 1, 1, 1};
 111:Core/Src/main.c **** int num2[] = {0, 0, 1, 0, 0, 1, 0};
 112:Core/Src/main.c **** int num3[] = {0, 0, 0, 0, 1, 1, 0};
 113:Core/Src/main.c **** int num4[] = {1, 0, 0, 1, 1, 0, 0};
 114:Core/Src/main.c **** int num5[] = {0, 1, 0, 0, 1, 0, 0};
 115:Core/Src/main.c **** int num6[] = {0, 1, 0, 0, 0, 0, 0};
 116:Core/Src/main.c **** int num7[] = {0, 0, 0, 1, 1, 1, 1};
 117:Core/Src/main.c **** int num8[] = {0, 0, 0, 0, 0, 0, 0};
 118:Core/Src/main.c **** int num9[] = {0, 0, 0, 0, 1, 0, 0};
 119:Core/Src/main.c **** void displayNumber(int numberArr[])
 120:Core/Src/main.c **** {
 121:Core/Src/main.c ****   HAL_GPIO_WritePin(A_GPIO_Port, A_Pin, numberArr[0]);
 122:Core/Src/main.c ****   HAL_GPIO_WritePin(B_GPIO_Port, B_Pin, numberArr[1]);
 123:Core/Src/main.c ****   HAL_GPIO_WritePin(C_GPIO_Port, C_Pin, numberArr[2]);
 124:Core/Src/main.c ****   HAL_GPIO_WritePin(D_GPIO_Port, D_Pin, numberArr[3]);
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(E_GPIO_Port, E_Pin, numberArr[4]);
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(F_GPIO_Port, F_Pin, numberArr[5]);
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(G_GPIO_Port, G_Pin, numberArr[6]);
 128:Core/Src/main.c **** }
 129:Core/Src/main.c **** void display7Seg(int num)
 130:Core/Src/main.c **** {
 131:Core/Src/main.c ****   switch (num)
 132:Core/Src/main.c ****   {
 133:Core/Src/main.c ****   case 0:
 134:Core/Src/main.c ****     displayNumber(num0);
 135:Core/Src/main.c ****     break;
 136:Core/Src/main.c ****   case 1:
 137:Core/Src/main.c ****     displayNumber(num1);
 138:Core/Src/main.c ****     break;
 139:Core/Src/main.c ****   case 2:
 140:Core/Src/main.c ****     displayNumber(num2);
 141:Core/Src/main.c ****     break;
 142:Core/Src/main.c ****   case 3:
 143:Core/Src/main.c ****     displayNumber(num3);
 144:Core/Src/main.c ****     break;
 145:Core/Src/main.c ****   case 4:
 146:Core/Src/main.c ****     displayNumber(num4);
 147:Core/Src/main.c ****     break;
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 4


 148:Core/Src/main.c ****   case 5:
 149:Core/Src/main.c ****     displayNumber(num5);
 150:Core/Src/main.c ****     break;
 151:Core/Src/main.c ****   case 6:
 152:Core/Src/main.c ****     displayNumber(num6);
 153:Core/Src/main.c ****     break;
 154:Core/Src/main.c ****   case 7:
 155:Core/Src/main.c ****     displayNumber(num7);
 156:Core/Src/main.c ****     break;
 157:Core/Src/main.c ****   case 8:
 158:Core/Src/main.c ****     displayNumber(num8);
 159:Core/Src/main.c ****     break;
 160:Core/Src/main.c ****   case 9:
 161:Core/Src/main.c ****     displayNumber(num9);
 162:Core/Src/main.c ****     break;
 163:Core/Src/main.c ****   }
 164:Core/Src/main.c **** }
 165:Core/Src/main.c **** /* USER CODE END 0 */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** /**
 168:Core/Src/main.c ****  * @brief  The application entry point.
 169:Core/Src/main.c ****  * @retval int
 170:Core/Src/main.c ****  */
 171:Core/Src/main.c **** int main(void)
 172:Core/Src/main.c **** {
 173:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* USER CODE END 1 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 180:Core/Src/main.c ****   HAL_Init();
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE END Init */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* Configure the system clock */
 187:Core/Src/main.c ****   SystemClock_Config();
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* USER CODE END SysInit */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* Initialize all configured peripherals */
 194:Core/Src/main.c ****   MX_GPIO_Init();
 195:Core/Src/main.c ****   MX_TIM2_Init();
 196:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 197:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 198:Core/Src/main.c ****   /* USER CODE END 2 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* Infinite loop */
 201:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 202:Core/Src/main.c ****   clearAllLed();
 203:Core/Src/main.c ****   int timer = changeState(currentState);
 204:Core/Src/main.c ****   setTimer1(timer);
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 5


 205:Core/Src/main.c ****   int count = timer / 100;
 206:Core/Src/main.c ****   setTimer2(100);
 207:Core/Src/main.c ****   display7Seg(count--);
 208:Core/Src/main.c ****   while (1)
 209:Core/Src/main.c ****   {
 210:Core/Src/main.c ****     if (timer1_flag == 1)
 211:Core/Src/main.c ****     {
 212:Core/Src/main.c ****       display7Seg(count);
 213:Core/Src/main.c ****       currentState = nextState;
 214:Core/Src/main.c ****       timer = changeState(currentState);
 215:Core/Src/main.c ****       count = timer / 100;
 216:Core/Src/main.c ****       setTimer1(timer);
 217:Core/Src/main.c ****     }
 218:Core/Src/main.c ****     if (timer2_flag == 1)
 219:Core/Src/main.c ****     {
 220:Core/Src/main.c ****       if (count >= 0 && count <= 9)
 221:Core/Src/main.c ****         display7Seg(count--);
 222:Core/Src/main.c ****       setTimer2(100);
 223:Core/Src/main.c ****     }
 224:Core/Src/main.c ****     /* USER CODE END WHILE */
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   /* USER CODE END 3 */
 229:Core/Src/main.c **** }
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** /**
 232:Core/Src/main.c ****  * @brief System Clock Configuration
 233:Core/Src/main.c ****  * @retval None
 234:Core/Src/main.c ****  */
 235:Core/Src/main.c **** void SystemClock_Config(void)
 236:Core/Src/main.c **** {
 237:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 238:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 241:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 242:Core/Src/main.c ****    */
 243:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 244:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 245:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 247:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 248:Core/Src/main.c ****   {
 249:Core/Src/main.c ****     Error_Handler();
 250:Core/Src/main.c ****   }
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 253:Core/Src/main.c ****    */
 254:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 255:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 256:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 257:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 258:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 261:Core/Src/main.c ****   {
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 6


 262:Core/Src/main.c ****     Error_Handler();
 263:Core/Src/main.c ****   }
 264:Core/Src/main.c **** }
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** /**
 267:Core/Src/main.c ****  * @brief TIM2 Initialization Function
 268:Core/Src/main.c ****  * @param None
 269:Core/Src/main.c ****  * @retval None
 270:Core/Src/main.c ****  */
 271:Core/Src/main.c **** static void MX_TIM2_Init(void)
 272:Core/Src/main.c **** {
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 279:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 284:Core/Src/main.c ****   htim2.Instance = TIM2;
 285:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 286:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 287:Core/Src/main.c ****   htim2.Init.Period = 9;
 288:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 289:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 290:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 291:Core/Src/main.c ****   {
 292:Core/Src/main.c ****     Error_Handler();
 293:Core/Src/main.c ****   }
 294:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 295:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 296:Core/Src/main.c ****   {
 297:Core/Src/main.c ****     Error_Handler();
 298:Core/Src/main.c ****   }
 299:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 300:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 301:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 302:Core/Src/main.c ****   {
 303:Core/Src/main.c ****     Error_Handler();
 304:Core/Src/main.c ****   }
 305:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 308:Core/Src/main.c **** }
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** /**
 311:Core/Src/main.c ****  * @brief GPIO Initialization Function
 312:Core/Src/main.c ****  * @param None
 313:Core/Src/main.c ****  * @retval None
 314:Core/Src/main.c ****  */
 315:Core/Src/main.c **** static void MX_GPIO_Init(void)
 316:Core/Src/main.c **** {
  26              		.loc 1 316 1 view -0
  27              		.cfi_startproc
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 7


  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 86B0     		sub	sp, sp, #24
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
 317:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 317 3 view .LVU1
  43              		.loc 1 317 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0294     		str	r4, [sp, #8]
  46 000a 0394     		str	r4, [sp, #12]
  47 000c 0494     		str	r4, [sp, #16]
  48 000e 0594     		str	r4, [sp, #20]
 318:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 319:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 322:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 322 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 322 3 view .LVU4
  52              		.loc 1 322 3 view .LVU5
  53 0010 1B4B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 322 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F00402 		and	r2, r2, #4
  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 322 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 322 3 view .LVU8
 323:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 323 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 323 3 view .LVU10
  68              		.loc 1 323 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F00802 		orr	r2, r2, #8
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 323 3 view .LVU12
  73 002c 9B69     		ldr	r3, [r3, #24]
  74 002e 03F00803 		and	r3, r3, #8
  75 0032 0193     		str	r3, [sp, #4]
  76              		.loc 1 323 3 view .LVU13
  77 0034 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 8


  78              	.LBE5:
  79              		.loc 1 323 3 view .LVU14
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 326:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, A_Pin | B_Pin | C_Pin | D_Pin | E_Pin | F_Pin | G_Pin, GPIO_PIN_RESET);
  80              		.loc 1 326 3 view .LVU15
  81 0036 DFF84C80 		ldr	r8, .L3+4
  82 003a 2246     		mov	r2, r4
  83 003c 7F21     		movs	r1, #127
  84 003e 4046     		mov	r0, r8
  85 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL0:
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 329:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, RED1_Pin | YELLOW1_Pin | GREEN1_Pin | RED2_Pin | YELLOW2_Pin | GREEN2_Pi
  87              		.loc 1 329 3 view .LVU16
  88 0044 104D     		ldr	r5, .L3+8
  89 0046 2246     		mov	r2, r4
  90 0048 3F21     		movs	r1, #63
  91 004a 2846     		mov	r0, r5
  92 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL1:
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /*Configure GPIO pins : A_Pin B_Pin C_Pin D_Pin
 332:Core/Src/main.c ****                            E_Pin F_Pin G_Pin */
 333:Core/Src/main.c ****   GPIO_InitStruct.Pin = A_Pin | B_Pin | C_Pin | D_Pin | E_Pin | F_Pin | G_Pin;
  94              		.loc 1 333 3 view .LVU17
  95              		.loc 1 333 23 is_stmt 0 view .LVU18
  96 0050 7F23     		movs	r3, #127
  97 0052 0293     		str	r3, [sp, #8]
 334:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  98              		.loc 1 334 3 is_stmt 1 view .LVU19
  99              		.loc 1 334 24 is_stmt 0 view .LVU20
 100 0054 0127     		movs	r7, #1
 101 0056 0397     		str	r7, [sp, #12]
 335:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 102              		.loc 1 335 3 is_stmt 1 view .LVU21
 103              		.loc 1 335 24 is_stmt 0 view .LVU22
 104 0058 0494     		str	r4, [sp, #16]
 336:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 105              		.loc 1 336 3 is_stmt 1 view .LVU23
 106              		.loc 1 336 25 is_stmt 0 view .LVU24
 107 005a 0226     		movs	r6, #2
 108 005c 0596     		str	r6, [sp, #20]
 337:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 109              		.loc 1 337 3 is_stmt 1 view .LVU25
 110 005e 02A9     		add	r1, sp, #8
 111 0060 4046     		mov	r0, r8
 112 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 113              	.LVL2:
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /*Configure GPIO pins : RED1_Pin YELLOW1_Pin GREEN1_Pin RED2_Pin
 340:Core/Src/main.c ****                            YELLOW2_Pin GREEN2_Pin */
 341:Core/Src/main.c ****   GPIO_InitStruct.Pin = RED1_Pin | YELLOW1_Pin | GREEN1_Pin | RED2_Pin | YELLOW2_Pin | GREEN2_Pin;
 114              		.loc 1 341 3 view .LVU26
 115              		.loc 1 341 23 is_stmt 0 view .LVU27
 116 0066 3F23     		movs	r3, #63
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 9


 117 0068 0293     		str	r3, [sp, #8]
 342:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 118              		.loc 1 342 3 is_stmt 1 view .LVU28
 119              		.loc 1 342 24 is_stmt 0 view .LVU29
 120 006a 0397     		str	r7, [sp, #12]
 343:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 121              		.loc 1 343 3 is_stmt 1 view .LVU30
 122              		.loc 1 343 24 is_stmt 0 view .LVU31
 123 006c 0494     		str	r4, [sp, #16]
 344:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 124              		.loc 1 344 3 is_stmt 1 view .LVU32
 125              		.loc 1 344 25 is_stmt 0 view .LVU33
 126 006e 0596     		str	r6, [sp, #20]
 345:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 127              		.loc 1 345 3 is_stmt 1 view .LVU34
 128 0070 02A9     		add	r1, sp, #8
 129 0072 2846     		mov	r0, r5
 130 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL3:
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 348:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 349:Core/Src/main.c **** }
 132              		.loc 1 349 1 is_stmt 0 view .LVU35
 133 0078 06B0     		add	sp, sp, #24
 134              	.LCFI2:
 135              		.cfi_def_cfa_offset 24
 136              		@ sp needed
 137 007a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 138              	.L4:
 139 007e 00BF     		.align	2
 140              	.L3:
 141 0080 00100240 		.word	1073876992
 142 0084 00080140 		.word	1073809408
 143 0088 000C0140 		.word	1073810432
 144              		.cfi_endproc
 145              	.LFE72:
 147              		.section	.text.clearAllLed,"ax",%progbits
 148              		.align	1
 149              		.global	clearAllLed
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 154              	clearAllLed:
 155              	.LFB65:
  69:Core/Src/main.c ****   HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, 1);
 156              		.loc 1 69 1 is_stmt 1 view -0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160 0000 10B5     		push	{r4, lr}
 161              	.LCFI3:
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 4, -8
 164              		.cfi_offset 14, -4
  70:Core/Src/main.c ****   HAL_GPIO_WritePin(YELLOW1_GPIO_Port, YELLOW1_Pin, 1);
 165              		.loc 1 70 3 view .LVU37
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 10


 166 0002 104C     		ldr	r4, .L7
 167 0004 0122     		movs	r2, #1
 168 0006 1146     		mov	r1, r2
 169 0008 2046     		mov	r0, r4
 170 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 171              	.LVL4:
  71:Core/Src/main.c ****   HAL_GPIO_WritePin(GREEN1_GPIO_Port, GREEN1_Pin, 1);
 172              		.loc 1 71 3 view .LVU38
 173 000e 0122     		movs	r2, #1
 174 0010 0221     		movs	r1, #2
 175 0012 2046     		mov	r0, r4
 176 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 177              	.LVL5:
  72:Core/Src/main.c ****   HAL_GPIO_WritePin(RED2_GPIO_Port, RED2_Pin, 1);
 178              		.loc 1 72 3 view .LVU39
 179 0018 0122     		movs	r2, #1
 180 001a 0421     		movs	r1, #4
 181 001c 2046     		mov	r0, r4
 182 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 183              	.LVL6:
  73:Core/Src/main.c ****   HAL_GPIO_WritePin(YELLOW2_GPIO_Port, YELLOW2_Pin, 1);
 184              		.loc 1 73 3 view .LVU40
 185 0022 0122     		movs	r2, #1
 186 0024 0821     		movs	r1, #8
 187 0026 2046     		mov	r0, r4
 188 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 189              	.LVL7:
  74:Core/Src/main.c ****   HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 1);
 190              		.loc 1 74 3 view .LVU41
 191 002c 0122     		movs	r2, #1
 192 002e 1021     		movs	r1, #16
 193 0030 2046     		mov	r0, r4
 194 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 195              	.LVL8:
  75:Core/Src/main.c **** }
 196              		.loc 1 75 3 view .LVU42
 197 0036 0122     		movs	r2, #1
 198 0038 2021     		movs	r1, #32
 199 003a 2046     		mov	r0, r4
 200 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 201              	.LVL9:
  76:Core/Src/main.c **** /// @brief
 202              		.loc 1 76 1 is_stmt 0 view .LVU43
 203 0040 10BD     		pop	{r4, pc}
 204              	.L8:
 205 0042 00BF     		.align	2
 206              	.L7:
 207 0044 000C0140 		.word	1073810432
 208              		.cfi_endproc
 209              	.LFE65:
 211              		.section	.text.changeState,"ax",%progbits
 212              		.align	1
 213              		.global	changeState
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 218              	changeState:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 11


 219              	.LVL10:
 220              	.LFB66:
  81:Core/Src/main.c ****   clearAllLed();
 221              		.loc 1 81 1 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
  81:Core/Src/main.c ****   clearAllLed();
 225              		.loc 1 81 1 is_stmt 0 view .LVU45
 226 0000 10B5     		push	{r4, lr}
 227              	.LCFI4:
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 4, -8
 230              		.cfi_offset 14, -4
 231 0002 0446     		mov	r4, r0
  82:Core/Src/main.c ****   switch (state)
 232              		.loc 1 82 3 is_stmt 1 view .LVU46
 233 0004 FFF7FEFF 		bl	clearAllLed
 234              	.LVL11:
  83:Core/Src/main.c ****   {
 235              		.loc 1 83 3 view .LVU47
 236 0008 032C     		cmp	r4, #3
 237 000a 45D8     		bhi	.L16
 238 000c DFE804F0 		tbb	[pc, r4]
 239              	.L12:
 240 0010 02       		.byte	(.L15-.L12)/2
 241 0011 13       		.byte	(.L14-.L12)/2
 242 0012 23       		.byte	(.L13-.L12)/2
 243 0013 34       		.byte	(.L11-.L12)/2
 244              		.p2align 1
 245              	.L15:
  86:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 0);
 246              		.loc 1 86 5 view .LVU48
 247 0014 214C     		ldr	r4, .L18
 248              	.LVL12:
  86:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 0);
 249              		.loc 1 86 5 is_stmt 0 view .LVU49
 250 0016 0022     		movs	r2, #0
 251 0018 0121     		movs	r1, #1
 252 001a 2046     		mov	r0, r4
 253 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 254              	.LVL13:
  87:Core/Src/main.c ****     nextState = 1;
 255              		.loc 1 87 5 is_stmt 1 view .LVU50
 256 0020 0022     		movs	r2, #0
 257 0022 2021     		movs	r1, #32
 258 0024 2046     		mov	r0, r4
 259 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 260              	.LVL14:
  88:Core/Src/main.c ****     return 300;
 261              		.loc 1 88 5 view .LVU51
  88:Core/Src/main.c ****     return 300;
 262              		.loc 1 88 15 is_stmt 0 view .LVU52
 263 002a 1D4B     		ldr	r3, .L18+4
 264 002c 0122     		movs	r2, #1
 265 002e 1A60     		str	r2, [r3]
  89:Core/Src/main.c ****   case RED1_YELLOW2:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 12


 266              		.loc 1 89 5 is_stmt 1 view .LVU53
  89:Core/Src/main.c ****   case RED1_YELLOW2:
 267              		.loc 1 89 12 is_stmt 0 view .LVU54
 268 0030 4FF49670 		mov	r0, #300
 269              	.L9:
 108:Core/Src/main.c **** int num0[] = {0, 0, 0, 0, 0, 0, 1};
 270              		.loc 1 108 1 view .LVU55
 271 0034 10BD     		pop	{r4, pc}
 272              	.LVL15:
 273              	.L14:
  91:Core/Src/main.c ****     HAL_GPIO_WritePin(YELLOW2_GPIO_Port, YELLOW2_Pin, 0);
 274              		.loc 1 91 5 is_stmt 1 view .LVU56
 275 0036 194C     		ldr	r4, .L18
 276              	.LVL16:
  91:Core/Src/main.c ****     HAL_GPIO_WritePin(YELLOW2_GPIO_Port, YELLOW2_Pin, 0);
 277              		.loc 1 91 5 is_stmt 0 view .LVU57
 278 0038 0022     		movs	r2, #0
 279 003a 0121     		movs	r1, #1
 280 003c 2046     		mov	r0, r4
 281 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 282              	.LVL17:
  92:Core/Src/main.c ****     nextState = 2;
 283              		.loc 1 92 5 is_stmt 1 view .LVU58
 284 0042 0022     		movs	r2, #0
 285 0044 1021     		movs	r1, #16
 286 0046 2046     		mov	r0, r4
 287 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 288              	.LVL18:
  93:Core/Src/main.c ****     return 200;
 289              		.loc 1 93 5 view .LVU59
  93:Core/Src/main.c ****     return 200;
 290              		.loc 1 93 15 is_stmt 0 view .LVU60
 291 004c 144B     		ldr	r3, .L18+4
 292 004e 0222     		movs	r2, #2
 293 0050 1A60     		str	r2, [r3]
  94:Core/Src/main.c ****   case GREEN1_RED2:
 294              		.loc 1 94 5 is_stmt 1 view .LVU61
  94:Core/Src/main.c ****   case GREEN1_RED2:
 295              		.loc 1 94 12 is_stmt 0 view .LVU62
 296 0052 C820     		movs	r0, #200
 297 0054 EEE7     		b	.L9
 298              	.LVL19:
 299              	.L13:
  96:Core/Src/main.c ****     HAL_GPIO_WritePin(RED2_GPIO_Port, RED2_Pin, 0);
 300              		.loc 1 96 5 is_stmt 1 view .LVU63
 301 0056 114C     		ldr	r4, .L18
 302              	.LVL20:
  96:Core/Src/main.c ****     HAL_GPIO_WritePin(RED2_GPIO_Port, RED2_Pin, 0);
 303              		.loc 1 96 5 is_stmt 0 view .LVU64
 304 0058 0022     		movs	r2, #0
 305 005a 0421     		movs	r1, #4
 306 005c 2046     		mov	r0, r4
 307 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 308              	.LVL21:
  97:Core/Src/main.c ****     nextState = 3;
 309              		.loc 1 97 5 is_stmt 1 view .LVU65
 310 0062 0022     		movs	r2, #0
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 13


 311 0064 0821     		movs	r1, #8
 312 0066 2046     		mov	r0, r4
 313 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 314              	.LVL22:
  98:Core/Src/main.c ****     return 300;
 315              		.loc 1 98 5 view .LVU66
  98:Core/Src/main.c ****     return 300;
 316              		.loc 1 98 15 is_stmt 0 view .LVU67
 317 006c 0C4B     		ldr	r3, .L18+4
 318 006e 0322     		movs	r2, #3
 319 0070 1A60     		str	r2, [r3]
  99:Core/Src/main.c ****   case YELLOW1_RED2:
 320              		.loc 1 99 5 is_stmt 1 view .LVU68
  99:Core/Src/main.c ****   case YELLOW1_RED2:
 321              		.loc 1 99 12 is_stmt 0 view .LVU69
 322 0072 4FF49670 		mov	r0, #300
 323 0076 DDE7     		b	.L9
 324              	.LVL23:
 325              	.L11:
 101:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 0);
 326              		.loc 1 101 5 is_stmt 1 view .LVU70
 327 0078 084C     		ldr	r4, .L18
 328              	.LVL24:
 101:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 0);
 329              		.loc 1 101 5 is_stmt 0 view .LVU71
 330 007a 0022     		movs	r2, #0
 331 007c 0221     		movs	r1, #2
 332 007e 2046     		mov	r0, r4
 333 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 334              	.LVL25:
 102:Core/Src/main.c ****     nextState = 0;
 335              		.loc 1 102 5 is_stmt 1 view .LVU72
 336 0084 0022     		movs	r2, #0
 337 0086 2021     		movs	r1, #32
 338 0088 2046     		mov	r0, r4
 339 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 340              	.LVL26:
 103:Core/Src/main.c ****     return 200;
 341              		.loc 1 103 5 view .LVU73
 103:Core/Src/main.c ****     return 200;
 342              		.loc 1 103 15 is_stmt 0 view .LVU74
 343 008e 044B     		ldr	r3, .L18+4
 344 0090 0022     		movs	r2, #0
 345 0092 1A60     		str	r2, [r3]
 104:Core/Src/main.c ****   default:
 346              		.loc 1 104 5 is_stmt 1 view .LVU75
 104:Core/Src/main.c ****   default:
 347              		.loc 1 104 12 is_stmt 0 view .LVU76
 348 0094 C820     		movs	r0, #200
 349 0096 CDE7     		b	.L9
 350              	.LVL27:
 351              	.L16:
  83:Core/Src/main.c ****   {
 352              		.loc 1 83 3 view .LVU77
 353 0098 0020     		movs	r0, #0
 354 009a CBE7     		b	.L9
 355              	.L19:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 14


 356              		.align	2
 357              	.L18:
 358 009c 000C0140 		.word	1073810432
 359 00a0 00000000 		.word	nextState
 360              		.cfi_endproc
 361              	.LFE66:
 363              		.section	.text.displayNumber,"ax",%progbits
 364              		.align	1
 365              		.global	displayNumber
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 370              	displayNumber:
 371              	.LVL28:
 372              	.LFB67:
 120:Core/Src/main.c ****   HAL_GPIO_WritePin(A_GPIO_Port, A_Pin, numberArr[0]);
 373              		.loc 1 120 1 is_stmt 1 view -0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 120:Core/Src/main.c ****   HAL_GPIO_WritePin(A_GPIO_Port, A_Pin, numberArr[0]);
 377              		.loc 1 120 1 is_stmt 0 view .LVU79
 378 0000 38B5     		push	{r3, r4, r5, lr}
 379              	.LCFI5:
 380              		.cfi_def_cfa_offset 16
 381              		.cfi_offset 3, -16
 382              		.cfi_offset 4, -12
 383              		.cfi_offset 5, -8
 384              		.cfi_offset 14, -4
 385 0002 0446     		mov	r4, r0
 121:Core/Src/main.c ****   HAL_GPIO_WritePin(B_GPIO_Port, B_Pin, numberArr[1]);
 386              		.loc 1 121 3 is_stmt 1 view .LVU80
 387 0004 124D     		ldr	r5, .L22
 388 0006 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 389 0008 0121     		movs	r1, #1
 390 000a 2846     		mov	r0, r5
 391              	.LVL29:
 121:Core/Src/main.c ****   HAL_GPIO_WritePin(B_GPIO_Port, B_Pin, numberArr[1]);
 392              		.loc 1 121 3 is_stmt 0 view .LVU81
 393 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 394              	.LVL30:
 122:Core/Src/main.c ****   HAL_GPIO_WritePin(C_GPIO_Port, C_Pin, numberArr[2]);
 395              		.loc 1 122 3 is_stmt 1 view .LVU82
 396 0010 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 397 0012 0221     		movs	r1, #2
 398 0014 2846     		mov	r0, r5
 399 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 400              	.LVL31:
 123:Core/Src/main.c ****   HAL_GPIO_WritePin(D_GPIO_Port, D_Pin, numberArr[3]);
 401              		.loc 1 123 3 view .LVU83
 402 001a 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 403 001c 0421     		movs	r1, #4
 404 001e 2846     		mov	r0, r5
 405 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 406              	.LVL32:
 124:Core/Src/main.c ****   HAL_GPIO_WritePin(E_GPIO_Port, E_Pin, numberArr[4]);
 407              		.loc 1 124 3 view .LVU84
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 15


 408 0024 227B     		ldrb	r2, [r4, #12]	@ zero_extendqisi2
 409 0026 0821     		movs	r1, #8
 410 0028 2846     		mov	r0, r5
 411 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 412              	.LVL33:
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(F_GPIO_Port, F_Pin, numberArr[5]);
 413              		.loc 1 125 3 view .LVU85
 414 002e 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 415 0030 1021     		movs	r1, #16
 416 0032 2846     		mov	r0, r5
 417 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 418              	.LVL34:
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(G_GPIO_Port, G_Pin, numberArr[6]);
 419              		.loc 1 126 3 view .LVU86
 420 0038 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 421 003a 2021     		movs	r1, #32
 422 003c 2846     		mov	r0, r5
 423 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 424              	.LVL35:
 127:Core/Src/main.c **** }
 425              		.loc 1 127 3 view .LVU87
 426 0042 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 427 0044 4021     		movs	r1, #64
 428 0046 2846     		mov	r0, r5
 429 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 430              	.LVL36:
 128:Core/Src/main.c **** void display7Seg(int num)
 431              		.loc 1 128 1 is_stmt 0 view .LVU88
 432 004c 38BD     		pop	{r3, r4, r5, pc}
 433              	.LVL37:
 434              	.L23:
 128:Core/Src/main.c **** void display7Seg(int num)
 435              		.loc 1 128 1 view .LVU89
 436 004e 00BF     		.align	2
 437              	.L22:
 438 0050 00080140 		.word	1073809408
 439              		.cfi_endproc
 440              	.LFE67:
 442              		.section	.text.display7Seg,"ax",%progbits
 443              		.align	1
 444              		.global	display7Seg
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 449              	display7Seg:
 450              	.LVL38:
 451              	.LFB68:
 130:Core/Src/main.c ****   switch (num)
 452              		.loc 1 130 1 is_stmt 1 view -0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 130:Core/Src/main.c ****   switch (num)
 456              		.loc 1 130 1 is_stmt 0 view .LVU91
 457 0000 08B5     		push	{r3, lr}
 458              	.LCFI6:
 459              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 16


 460              		.cfi_offset 3, -8
 461              		.cfi_offset 14, -4
 131:Core/Src/main.c ****   {
 462              		.loc 1 131 3 is_stmt 1 view .LVU92
 463 0002 0928     		cmp	r0, #9
 464 0004 09D8     		bhi	.L24
 465 0006 DFE800F0 		tbb	[pc, r0]
 466              	.L27:
 467 000a 05       		.byte	(.L36-.L27)/2
 468 000b 09       		.byte	(.L35-.L27)/2
 469 000c 0D       		.byte	(.L34-.L27)/2
 470 000d 11       		.byte	(.L33-.L27)/2
 471 000e 15       		.byte	(.L32-.L27)/2
 472 000f 19       		.byte	(.L31-.L27)/2
 473 0010 1D       		.byte	(.L30-.L27)/2
 474 0011 21       		.byte	(.L29-.L27)/2
 475 0012 25       		.byte	(.L28-.L27)/2
 476 0013 29       		.byte	(.L26-.L27)/2
 477              		.p2align 1
 478              	.L36:
 134:Core/Src/main.c ****     break;
 479              		.loc 1 134 5 view .LVU93
 480 0014 1348     		ldr	r0, .L39
 481              	.LVL39:
 134:Core/Src/main.c ****     break;
 482              		.loc 1 134 5 is_stmt 0 view .LVU94
 483 0016 FFF7FEFF 		bl	displayNumber
 484              	.LVL40:
 135:Core/Src/main.c ****   case 1:
 485              		.loc 1 135 5 is_stmt 1 view .LVU95
 486              	.L24:
 164:Core/Src/main.c **** /* USER CODE END 0 */
 487              		.loc 1 164 1 is_stmt 0 view .LVU96
 488 001a 08BD     		pop	{r3, pc}
 489              	.LVL41:
 490              	.L35:
 137:Core/Src/main.c ****     break;
 491              		.loc 1 137 5 is_stmt 1 view .LVU97
 492 001c 1248     		ldr	r0, .L39+4
 493              	.LVL42:
 137:Core/Src/main.c ****     break;
 494              		.loc 1 137 5 is_stmt 0 view .LVU98
 495 001e FFF7FEFF 		bl	displayNumber
 496              	.LVL43:
 138:Core/Src/main.c ****   case 2:
 497              		.loc 1 138 5 is_stmt 1 view .LVU99
 498 0022 FAE7     		b	.L24
 499              	.LVL44:
 500              	.L34:
 140:Core/Src/main.c ****     break;
 501              		.loc 1 140 5 view .LVU100
 502 0024 1148     		ldr	r0, .L39+8
 503              	.LVL45:
 140:Core/Src/main.c ****     break;
 504              		.loc 1 140 5 is_stmt 0 view .LVU101
 505 0026 FFF7FEFF 		bl	displayNumber
 506              	.LVL46:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 17


 141:Core/Src/main.c ****   case 3:
 507              		.loc 1 141 5 is_stmt 1 view .LVU102
 508 002a F6E7     		b	.L24
 509              	.LVL47:
 510              	.L33:
 143:Core/Src/main.c ****     break;
 511              		.loc 1 143 5 view .LVU103
 512 002c 1048     		ldr	r0, .L39+12
 513              	.LVL48:
 143:Core/Src/main.c ****     break;
 514              		.loc 1 143 5 is_stmt 0 view .LVU104
 515 002e FFF7FEFF 		bl	displayNumber
 516              	.LVL49:
 144:Core/Src/main.c ****   case 4:
 517              		.loc 1 144 5 is_stmt 1 view .LVU105
 518 0032 F2E7     		b	.L24
 519              	.LVL50:
 520              	.L32:
 146:Core/Src/main.c ****     break;
 521              		.loc 1 146 5 view .LVU106
 522 0034 0F48     		ldr	r0, .L39+16
 523              	.LVL51:
 146:Core/Src/main.c ****     break;
 524              		.loc 1 146 5 is_stmt 0 view .LVU107
 525 0036 FFF7FEFF 		bl	displayNumber
 526              	.LVL52:
 147:Core/Src/main.c ****   case 5:
 527              		.loc 1 147 5 is_stmt 1 view .LVU108
 528 003a EEE7     		b	.L24
 529              	.LVL53:
 530              	.L31:
 149:Core/Src/main.c ****     break;
 531              		.loc 1 149 5 view .LVU109
 532 003c 0E48     		ldr	r0, .L39+20
 533              	.LVL54:
 149:Core/Src/main.c ****     break;
 534              		.loc 1 149 5 is_stmt 0 view .LVU110
 535 003e FFF7FEFF 		bl	displayNumber
 536              	.LVL55:
 150:Core/Src/main.c ****   case 6:
 537              		.loc 1 150 5 is_stmt 1 view .LVU111
 538 0042 EAE7     		b	.L24
 539              	.LVL56:
 540              	.L30:
 152:Core/Src/main.c ****     break;
 541              		.loc 1 152 5 view .LVU112
 542 0044 0D48     		ldr	r0, .L39+24
 543              	.LVL57:
 152:Core/Src/main.c ****     break;
 544              		.loc 1 152 5 is_stmt 0 view .LVU113
 545 0046 FFF7FEFF 		bl	displayNumber
 546              	.LVL58:
 153:Core/Src/main.c ****   case 7:
 547              		.loc 1 153 5 is_stmt 1 view .LVU114
 548 004a E6E7     		b	.L24
 549              	.LVL59:
 550              	.L29:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 18


 155:Core/Src/main.c ****     break;
 551              		.loc 1 155 5 view .LVU115
 552 004c 0C48     		ldr	r0, .L39+28
 553              	.LVL60:
 155:Core/Src/main.c ****     break;
 554              		.loc 1 155 5 is_stmt 0 view .LVU116
 555 004e FFF7FEFF 		bl	displayNumber
 556              	.LVL61:
 156:Core/Src/main.c ****   case 8:
 557              		.loc 1 156 5 is_stmt 1 view .LVU117
 558 0052 E2E7     		b	.L24
 559              	.LVL62:
 560              	.L28:
 158:Core/Src/main.c ****     break;
 561              		.loc 1 158 5 view .LVU118
 562 0054 0B48     		ldr	r0, .L39+32
 563              	.LVL63:
 158:Core/Src/main.c ****     break;
 564              		.loc 1 158 5 is_stmt 0 view .LVU119
 565 0056 FFF7FEFF 		bl	displayNumber
 566              	.LVL64:
 159:Core/Src/main.c ****   case 9:
 567              		.loc 1 159 5 is_stmt 1 view .LVU120
 568 005a DEE7     		b	.L24
 569              	.LVL65:
 570              	.L26:
 161:Core/Src/main.c ****     break;
 571              		.loc 1 161 5 view .LVU121
 572 005c 0A48     		ldr	r0, .L39+36
 573              	.LVL66:
 161:Core/Src/main.c ****     break;
 574              		.loc 1 161 5 is_stmt 0 view .LVU122
 575 005e FFF7FEFF 		bl	displayNumber
 576              	.LVL67:
 162:Core/Src/main.c ****   }
 577              		.loc 1 162 5 is_stmt 1 view .LVU123
 164:Core/Src/main.c **** /* USER CODE END 0 */
 578              		.loc 1 164 1 is_stmt 0 view .LVU124
 579 0062 DAE7     		b	.L24
 580              	.L40:
 581              		.align	2
 582              	.L39:
 583 0064 00000000 		.word	num0
 584 0068 00000000 		.word	num1
 585 006c 00000000 		.word	num2
 586 0070 00000000 		.word	num3
 587 0074 00000000 		.word	num4
 588 0078 00000000 		.word	num5
 589 007c 00000000 		.word	num6
 590 0080 00000000 		.word	num7
 591 0084 00000000 		.word	num8
 592 0088 00000000 		.word	num9
 593              		.cfi_endproc
 594              	.LFE68:
 596              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 597              		.align	1
 598              		.global	HAL_TIM_PeriodElapsedCallback
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 19


 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 603              	HAL_TIM_PeriodElapsedCallback:
 604              	.LVL68:
 605              	.LFB73:
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 352:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 353:Core/Src/main.c **** {
 606              		.loc 1 353 1 is_stmt 1 view -0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610              		.loc 1 353 1 is_stmt 0 view .LVU126
 611 0000 08B5     		push	{r3, lr}
 612              	.LCFI7:
 613              		.cfi_def_cfa_offset 8
 614              		.cfi_offset 3, -8
 615              		.cfi_offset 14, -4
 354:Core/Src/main.c ****   timerRun();
 616              		.loc 1 354 3 is_stmt 1 view .LVU127
 617 0002 FFF7FEFF 		bl	timerRun
 618              	.LVL69:
 355:Core/Src/main.c **** }
 619              		.loc 1 355 1 is_stmt 0 view .LVU128
 620 0006 08BD     		pop	{r3, pc}
 621              		.cfi_endproc
 622              	.LFE73:
 624              		.section	.text.Error_Handler,"ax",%progbits
 625              		.align	1
 626              		.global	Error_Handler
 627              		.syntax unified
 628              		.thumb
 629              		.thumb_func
 631              	Error_Handler:
 632              	.LFB74:
 356:Core/Src/main.c **** /* USER CODE END 4 */
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** /**
 359:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 360:Core/Src/main.c ****  * @retval None
 361:Core/Src/main.c ****  */
 362:Core/Src/main.c **** void Error_Handler(void)
 363:Core/Src/main.c **** {
 633              		.loc 1 363 1 is_stmt 1 view -0
 634              		.cfi_startproc
 635              		@ Volatile: function does not return.
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 364:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 365:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 366:Core/Src/main.c ****   __disable_irq();
 639              		.loc 1 366 3 view .LVU130
 640              	.LBB6:
 641              	.LBI6:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 20


 642              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 21


  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 22


 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 643              		.loc 2 140 27 view .LVU131
 644              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 645              		.loc 2 142 3 view .LVU132
 646              		.syntax unified
 647              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 648 0000 72B6     		cpsid i
 649              	@ 0 "" 2
 650              		.thumb
 651              		.syntax unified
 652              	.L44:
 653              	.LBE7:
 654              	.LBE6:
 367:Core/Src/main.c ****   while (1)
 655              		.loc 1 367 3 discriminator 1 view .LVU133
 368:Core/Src/main.c ****   {
 369:Core/Src/main.c ****   }
 656              		.loc 1 369 3 discriminator 1 view .LVU134
 367:Core/Src/main.c ****   while (1)
 657              		.loc 1 367 9 discriminator 1 view .LVU135
 658 0002 FEE7     		b	.L44
 659              		.cfi_endproc
 660              	.LFE74:
 662              		.section	.text.MX_TIM2_Init,"ax",%progbits
 663              		.align	1
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 668              	MX_TIM2_Init:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 23


 669              	.LFB71:
 272:Core/Src/main.c **** 
 670              		.loc 1 272 1 view -0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 24
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674 0000 00B5     		push	{lr}
 675              	.LCFI8:
 676              		.cfi_def_cfa_offset 4
 677              		.cfi_offset 14, -4
 678 0002 87B0     		sub	sp, sp, #28
 679              	.LCFI9:
 680              		.cfi_def_cfa_offset 32
 278:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 681              		.loc 1 278 3 view .LVU137
 278:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 682              		.loc 1 278 26 is_stmt 0 view .LVU138
 683 0004 0023     		movs	r3, #0
 684 0006 0293     		str	r3, [sp, #8]
 685 0008 0393     		str	r3, [sp, #12]
 686 000a 0493     		str	r3, [sp, #16]
 687 000c 0593     		str	r3, [sp, #20]
 279:Core/Src/main.c **** 
 688              		.loc 1 279 3 is_stmt 1 view .LVU139
 279:Core/Src/main.c **** 
 689              		.loc 1 279 27 is_stmt 0 view .LVU140
 690 000e 0093     		str	r3, [sp]
 691 0010 0193     		str	r3, [sp, #4]
 284:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 692              		.loc 1 284 3 is_stmt 1 view .LVU141
 284:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 693              		.loc 1 284 18 is_stmt 0 view .LVU142
 694 0012 1448     		ldr	r0, .L53
 695 0014 4FF08042 		mov	r2, #1073741824
 696 0018 0260     		str	r2, [r0]
 285:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 697              		.loc 1 285 3 is_stmt 1 view .LVU143
 285:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 698              		.loc 1 285 24 is_stmt 0 view .LVU144
 699 001a 41F63F72 		movw	r2, #7999
 700 001e 4260     		str	r2, [r0, #4]
 286:Core/Src/main.c ****   htim2.Init.Period = 9;
 701              		.loc 1 286 3 is_stmt 1 view .LVU145
 286:Core/Src/main.c ****   htim2.Init.Period = 9;
 702              		.loc 1 286 26 is_stmt 0 view .LVU146
 703 0020 8360     		str	r3, [r0, #8]
 287:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 704              		.loc 1 287 3 is_stmt 1 view .LVU147
 287:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 705              		.loc 1 287 21 is_stmt 0 view .LVU148
 706 0022 0922     		movs	r2, #9
 707 0024 C260     		str	r2, [r0, #12]
 288:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 708              		.loc 1 288 3 is_stmt 1 view .LVU149
 288:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 709              		.loc 1 288 28 is_stmt 0 view .LVU150
 710 0026 0361     		str	r3, [r0, #16]
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 24


 289:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 711              		.loc 1 289 3 is_stmt 1 view .LVU151
 289:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 712              		.loc 1 289 32 is_stmt 0 view .LVU152
 713 0028 8361     		str	r3, [r0, #24]
 290:Core/Src/main.c ****   {
 714              		.loc 1 290 3 is_stmt 1 view .LVU153
 290:Core/Src/main.c ****   {
 715              		.loc 1 290 7 is_stmt 0 view .LVU154
 716 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 717              	.LVL70:
 290:Core/Src/main.c ****   {
 718              		.loc 1 290 6 view .LVU155
 719 002e 90B9     		cbnz	r0, .L50
 294:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 720              		.loc 1 294 3 is_stmt 1 view .LVU156
 294:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 721              		.loc 1 294 34 is_stmt 0 view .LVU157
 722 0030 4FF48053 		mov	r3, #4096
 723 0034 0293     		str	r3, [sp, #8]
 295:Core/Src/main.c ****   {
 724              		.loc 1 295 3 is_stmt 1 view .LVU158
 295:Core/Src/main.c ****   {
 725              		.loc 1 295 7 is_stmt 0 view .LVU159
 726 0036 02A9     		add	r1, sp, #8
 727 0038 0A48     		ldr	r0, .L53
 728 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 729              	.LVL71:
 295:Core/Src/main.c ****   {
 730              		.loc 1 295 6 view .LVU160
 731 003e 60B9     		cbnz	r0, .L51
 299:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 732              		.loc 1 299 3 is_stmt 1 view .LVU161
 299:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 733              		.loc 1 299 37 is_stmt 0 view .LVU162
 734 0040 0023     		movs	r3, #0
 735 0042 0093     		str	r3, [sp]
 300:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 736              		.loc 1 300 3 is_stmt 1 view .LVU163
 300:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 737              		.loc 1 300 33 is_stmt 0 view .LVU164
 738 0044 0193     		str	r3, [sp, #4]
 301:Core/Src/main.c ****   {
 739              		.loc 1 301 3 is_stmt 1 view .LVU165
 301:Core/Src/main.c ****   {
 740              		.loc 1 301 7 is_stmt 0 view .LVU166
 741 0046 6946     		mov	r1, sp
 742 0048 0648     		ldr	r0, .L53
 743 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 744              	.LVL72:
 301:Core/Src/main.c ****   {
 745              		.loc 1 301 6 view .LVU167
 746 004e 30B9     		cbnz	r0, .L52
 308:Core/Src/main.c **** 
 747              		.loc 1 308 1 view .LVU168
 748 0050 07B0     		add	sp, sp, #28
 749              	.LCFI10:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 25


 750              		.cfi_remember_state
 751              		.cfi_def_cfa_offset 4
 752              		@ sp needed
 753 0052 5DF804FB 		ldr	pc, [sp], #4
 754              	.L50:
 755              	.LCFI11:
 756              		.cfi_restore_state
 292:Core/Src/main.c ****   }
 757              		.loc 1 292 5 is_stmt 1 view .LVU169
 758 0056 FFF7FEFF 		bl	Error_Handler
 759              	.LVL73:
 760              	.L51:
 297:Core/Src/main.c ****   }
 761              		.loc 1 297 5 view .LVU170
 762 005a FFF7FEFF 		bl	Error_Handler
 763              	.LVL74:
 764              	.L52:
 303:Core/Src/main.c ****   }
 765              		.loc 1 303 5 view .LVU171
 766 005e FFF7FEFF 		bl	Error_Handler
 767              	.LVL75:
 768              	.L54:
 769 0062 00BF     		.align	2
 770              	.L53:
 771 0064 00000000 		.word	htim2
 772              		.cfi_endproc
 773              	.LFE71:
 775              		.section	.text.SystemClock_Config,"ax",%progbits
 776              		.align	1
 777              		.global	SystemClock_Config
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 782              	SystemClock_Config:
 783              	.LFB70:
 236:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 784              		.loc 1 236 1 view -0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 64
 787              		@ frame_needed = 0, uses_anonymous_args = 0
 788 0000 00B5     		push	{lr}
 789              	.LCFI12:
 790              		.cfi_def_cfa_offset 4
 791              		.cfi_offset 14, -4
 792 0002 91B0     		sub	sp, sp, #68
 793              	.LCFI13:
 794              		.cfi_def_cfa_offset 72
 237:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 795              		.loc 1 237 3 view .LVU173
 237:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 796              		.loc 1 237 22 is_stmt 0 view .LVU174
 797 0004 2822     		movs	r2, #40
 798 0006 0021     		movs	r1, #0
 799 0008 06A8     		add	r0, sp, #24
 800 000a FFF7FEFF 		bl	memset
 801              	.LVL76:
 238:Core/Src/main.c **** 
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 26


 802              		.loc 1 238 3 is_stmt 1 view .LVU175
 238:Core/Src/main.c **** 
 803              		.loc 1 238 22 is_stmt 0 view .LVU176
 804 000e 0023     		movs	r3, #0
 805 0010 0193     		str	r3, [sp, #4]
 806 0012 0293     		str	r3, [sp, #8]
 807 0014 0393     		str	r3, [sp, #12]
 808 0016 0493     		str	r3, [sp, #16]
 809 0018 0593     		str	r3, [sp, #20]
 243:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 810              		.loc 1 243 3 is_stmt 1 view .LVU177
 243:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 811              		.loc 1 243 36 is_stmt 0 view .LVU178
 812 001a 0223     		movs	r3, #2
 813 001c 0693     		str	r3, [sp, #24]
 244:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 814              		.loc 1 244 3 is_stmt 1 view .LVU179
 244:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 815              		.loc 1 244 30 is_stmt 0 view .LVU180
 816 001e 0123     		movs	r3, #1
 817 0020 0A93     		str	r3, [sp, #40]
 245:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 818              		.loc 1 245 3 is_stmt 1 view .LVU181
 245:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 819              		.loc 1 245 41 is_stmt 0 view .LVU182
 820 0022 1023     		movs	r3, #16
 821 0024 0B93     		str	r3, [sp, #44]
 246:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 822              		.loc 1 246 3 is_stmt 1 view .LVU183
 247:Core/Src/main.c ****   {
 823              		.loc 1 247 3 view .LVU184
 247:Core/Src/main.c ****   {
 824              		.loc 1 247 7 is_stmt 0 view .LVU185
 825 0026 06A8     		add	r0, sp, #24
 826 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 827              	.LVL77:
 247:Core/Src/main.c ****   {
 828              		.loc 1 247 6 view .LVU186
 829 002c 68B9     		cbnz	r0, .L59
 254:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 830              		.loc 1 254 3 is_stmt 1 view .LVU187
 254:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 831              		.loc 1 254 31 is_stmt 0 view .LVU188
 832 002e 0F23     		movs	r3, #15
 833 0030 0193     		str	r3, [sp, #4]
 255:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 834              		.loc 1 255 3 is_stmt 1 view .LVU189
 255:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 835              		.loc 1 255 34 is_stmt 0 view .LVU190
 836 0032 0021     		movs	r1, #0
 837 0034 0291     		str	r1, [sp, #8]
 256:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 838              		.loc 1 256 3 is_stmt 1 view .LVU191
 256:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 839              		.loc 1 256 35 is_stmt 0 view .LVU192
 840 0036 0391     		str	r1, [sp, #12]
 257:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 27


 841              		.loc 1 257 3 is_stmt 1 view .LVU193
 257:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 842              		.loc 1 257 36 is_stmt 0 view .LVU194
 843 0038 0491     		str	r1, [sp, #16]
 258:Core/Src/main.c **** 
 844              		.loc 1 258 3 is_stmt 1 view .LVU195
 258:Core/Src/main.c **** 
 845              		.loc 1 258 36 is_stmt 0 view .LVU196
 846 003a 0591     		str	r1, [sp, #20]
 260:Core/Src/main.c ****   {
 847              		.loc 1 260 3 is_stmt 1 view .LVU197
 260:Core/Src/main.c ****   {
 848              		.loc 1 260 7 is_stmt 0 view .LVU198
 849 003c 01A8     		add	r0, sp, #4
 850 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 851              	.LVL78:
 260:Core/Src/main.c ****   {
 852              		.loc 1 260 6 view .LVU199
 853 0042 20B9     		cbnz	r0, .L60
 264:Core/Src/main.c **** 
 854              		.loc 1 264 1 view .LVU200
 855 0044 11B0     		add	sp, sp, #68
 856              	.LCFI14:
 857              		.cfi_remember_state
 858              		.cfi_def_cfa_offset 4
 859              		@ sp needed
 860 0046 5DF804FB 		ldr	pc, [sp], #4
 861              	.L59:
 862              	.LCFI15:
 863              		.cfi_restore_state
 249:Core/Src/main.c ****   }
 864              		.loc 1 249 5 is_stmt 1 view .LVU201
 865 004a FFF7FEFF 		bl	Error_Handler
 866              	.LVL79:
 867              	.L60:
 262:Core/Src/main.c ****   }
 868              		.loc 1 262 5 view .LVU202
 869 004e FFF7FEFF 		bl	Error_Handler
 870              	.LVL80:
 871              		.cfi_endproc
 872              	.LFE70:
 874              		.section	.text.main,"ax",%progbits
 875              		.align	1
 876              		.global	main
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 881              	main:
 882              	.LFB69:
 172:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 883              		.loc 1 172 1 view -0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887 0000 38B5     		push	{r3, r4, r5, lr}
 888              	.LCFI16:
 889              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 28


 890              		.cfi_offset 3, -16
 891              		.cfi_offset 4, -12
 892              		.cfi_offset 5, -8
 893              		.cfi_offset 14, -4
 180:Core/Src/main.c **** 
 894              		.loc 1 180 3 view .LVU204
 895 0002 FFF7FEFF 		bl	HAL_Init
 896              	.LVL81:
 187:Core/Src/main.c **** 
 897              		.loc 1 187 3 view .LVU205
 898 0006 FFF7FEFF 		bl	SystemClock_Config
 899              	.LVL82:
 194:Core/Src/main.c ****   MX_TIM2_Init();
 900              		.loc 1 194 3 view .LVU206
 901 000a FFF7FEFF 		bl	MX_GPIO_Init
 902              	.LVL83:
 195:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 903              		.loc 1 195 3 view .LVU207
 904 000e FFF7FEFF 		bl	MX_TIM2_Init
 905              	.LVL84:
 197:Core/Src/main.c ****   /* USER CODE END 2 */
 906              		.loc 1 197 3 view .LVU208
 907 0012 1F48     		ldr	r0, .L68
 908 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 909              	.LVL85:
 202:Core/Src/main.c ****   int timer = changeState(currentState);
 910              		.loc 1 202 3 view .LVU209
 911 0018 FFF7FEFF 		bl	clearAllLed
 912              	.LVL86:
 203:Core/Src/main.c ****   setTimer1(timer);
 913              		.loc 1 203 3 view .LVU210
 203:Core/Src/main.c ****   setTimer1(timer);
 914              		.loc 1 203 15 is_stmt 0 view .LVU211
 915 001c 1D4B     		ldr	r3, .L68+4
 916 001e 1868     		ldr	r0, [r3]
 917 0020 FFF7FEFF 		bl	changeState
 918              	.LVL87:
 919 0024 0446     		mov	r4, r0
 920              	.LVL88:
 204:Core/Src/main.c ****   int count = timer / 100;
 921              		.loc 1 204 3 is_stmt 1 view .LVU212
 922 0026 FFF7FEFF 		bl	setTimer1
 923              	.LVL89:
 205:Core/Src/main.c ****   setTimer2(100);
 924              		.loc 1 205 3 view .LVU213
 205:Core/Src/main.c ****   setTimer2(100);
 925              		.loc 1 205 7 is_stmt 0 view .LVU214
 926 002a 1B4B     		ldr	r3, .L68+8
 927 002c 83FB0423 		smull	r2, r3, r3, r4
 928 0030 E417     		asrs	r4, r4, #31
 929              	.LVL90:
 205:Core/Src/main.c ****   setTimer2(100);
 930              		.loc 1 205 7 view .LVU215
 931 0032 C4EB6315 		rsb	r5, r4, r3, asr #5
 932              	.LVL91:
 206:Core/Src/main.c ****   display7Seg(count--);
 933              		.loc 1 206 3 is_stmt 1 view .LVU216
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 29


 934 0036 6420     		movs	r0, #100
 935 0038 FFF7FEFF 		bl	setTimer2
 936              	.LVL92:
 207:Core/Src/main.c ****   while (1)
 937              		.loc 1 207 3 view .LVU217
 938 003c 6C1E     		subs	r4, r5, #1
 939              	.LVL93:
 207:Core/Src/main.c ****   while (1)
 940              		.loc 1 207 3 is_stmt 0 view .LVU218
 941 003e 2846     		mov	r0, r5
 942 0040 FFF7FEFF 		bl	display7Seg
 943              	.LVL94:
 944 0044 03E0     		b	.L63
 945              	.LVL95:
 946              	.L62:
 218:Core/Src/main.c ****     {
 947              		.loc 1 218 5 is_stmt 1 view .LVU219
 218:Core/Src/main.c ****     {
 948              		.loc 1 218 21 is_stmt 0 view .LVU220
 949 0046 154B     		ldr	r3, .L68+12
 950 0048 1B68     		ldr	r3, [r3]
 218:Core/Src/main.c ****     {
 951              		.loc 1 218 8 view .LVU221
 952 004a 012B     		cmp	r3, #1
 953 004c 15D0     		beq	.L67
 954              	.L63:
 208:Core/Src/main.c ****   {
 955              		.loc 1 208 3 is_stmt 1 view .LVU222
 210:Core/Src/main.c ****     {
 956              		.loc 1 210 5 view .LVU223
 210:Core/Src/main.c ****     {
 957              		.loc 1 210 21 is_stmt 0 view .LVU224
 958 004e 144B     		ldr	r3, .L68+16
 959 0050 1B68     		ldr	r3, [r3]
 210:Core/Src/main.c ****     {
 960              		.loc 1 210 8 view .LVU225
 961 0052 012B     		cmp	r3, #1
 962 0054 F7D1     		bne	.L62
 212:Core/Src/main.c ****       currentState = nextState;
 963              		.loc 1 212 7 is_stmt 1 view .LVU226
 964 0056 2046     		mov	r0, r4
 965 0058 FFF7FEFF 		bl	display7Seg
 966              	.LVL96:
 213:Core/Src/main.c ****       timer = changeState(currentState);
 967              		.loc 1 213 7 view .LVU227
 213:Core/Src/main.c ****       timer = changeState(currentState);
 968              		.loc 1 213 20 is_stmt 0 view .LVU228
 969 005c 114B     		ldr	r3, .L68+20
 970 005e 1868     		ldr	r0, [r3]
 971 0060 0C4B     		ldr	r3, .L68+4
 972 0062 1860     		str	r0, [r3]
 214:Core/Src/main.c ****       count = timer / 100;
 973              		.loc 1 214 7 is_stmt 1 view .LVU229
 214:Core/Src/main.c ****       count = timer / 100;
 974              		.loc 1 214 15 is_stmt 0 view .LVU230
 975 0064 FFF7FEFF 		bl	changeState
 976              	.LVL97:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 30


 215:Core/Src/main.c ****       setTimer1(timer);
 977              		.loc 1 215 7 is_stmt 1 view .LVU231
 215:Core/Src/main.c ****       setTimer1(timer);
 978              		.loc 1 215 13 is_stmt 0 view .LVU232
 979 0068 0B4B     		ldr	r3, .L68+8
 980 006a 83FB0023 		smull	r2, r3, r3, r0
 981 006e C417     		asrs	r4, r0, #31
 982              	.LVL98:
 215:Core/Src/main.c ****       setTimer1(timer);
 983              		.loc 1 215 13 view .LVU233
 984 0070 C4EB6314 		rsb	r4, r4, r3, asr #5
 985              	.LVL99:
 216:Core/Src/main.c ****     }
 986              		.loc 1 216 7 is_stmt 1 view .LVU234
 987 0074 FFF7FEFF 		bl	setTimer1
 988              	.LVL100:
 216:Core/Src/main.c ****     }
 989              		.loc 1 216 7 is_stmt 0 view .LVU235
 990 0078 E5E7     		b	.L62
 991              	.LVL101:
 992              	.L67:
 220:Core/Src/main.c ****         display7Seg(count--);
 993              		.loc 1 220 7 is_stmt 1 view .LVU236
 220:Core/Src/main.c ****         display7Seg(count--);
 994              		.loc 1 220 10 is_stmt 0 view .LVU237
 995 007a 092C     		cmp	r4, #9
 996 007c 04D8     		bhi	.L64
 221:Core/Src/main.c ****       setTimer2(100);
 997              		.loc 1 221 9 is_stmt 1 view .LVU238
 998 007e 651E     		subs	r5, r4, #1
 999              	.LVL102:
 221:Core/Src/main.c ****       setTimer2(100);
 1000              		.loc 1 221 9 is_stmt 0 view .LVU239
 1001 0080 2046     		mov	r0, r4
 1002 0082 FFF7FEFF 		bl	display7Seg
 1003              	.LVL103:
 1004 0086 2C46     		mov	r4, r5
 1005              	.LVL104:
 1006              	.L64:
 222:Core/Src/main.c ****     }
 1007              		.loc 1 222 7 is_stmt 1 view .LVU240
 1008 0088 6420     		movs	r0, #100
 1009 008a FFF7FEFF 		bl	setTimer2
 1010              	.LVL105:
 1011 008e DEE7     		b	.L63
 1012              	.L69:
 1013              		.align	2
 1014              	.L68:
 1015 0090 00000000 		.word	htim2
 1016 0094 00000000 		.word	currentState
 1017 0098 1F85EB51 		.word	1374389535
 1018 009c 00000000 		.word	timer2_flag
 1019 00a0 00000000 		.word	timer1_flag
 1020 00a4 00000000 		.word	nextState
 1021              		.cfi_endproc
 1022              	.LFE69:
 1024              		.global	num9
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 31


 1025              		.section	.data.num9,"aw"
 1026              		.align	2
 1029              	num9:
 1030 0000 00000000 		.word	0
 1031 0004 00000000 		.word	0
 1032 0008 00000000 		.word	0
 1033 000c 00000000 		.word	0
 1034 0010 01000000 		.word	1
 1035 0014 00000000 		.word	0
 1036 0018 00000000 		.word	0
 1037              		.global	num8
 1038              		.section	.bss.num8,"aw",%nobits
 1039              		.align	2
 1042              	num8:
 1043 0000 00000000 		.space	28
 1043      00000000 
 1043      00000000 
 1043      00000000 
 1043      00000000 
 1044              		.global	num7
 1045              		.section	.data.num7,"aw"
 1046              		.align	2
 1049              	num7:
 1050 0000 00000000 		.word	0
 1051 0004 00000000 		.word	0
 1052 0008 00000000 		.word	0
 1053 000c 01000000 		.word	1
 1054 0010 01000000 		.word	1
 1055 0014 01000000 		.word	1
 1056 0018 01000000 		.word	1
 1057              		.global	num6
 1058              		.section	.data.num6,"aw"
 1059              		.align	2
 1062              	num6:
 1063 0000 00000000 		.word	0
 1064 0004 01000000 		.word	1
 1065 0008 00000000 		.word	0
 1066 000c 00000000 		.word	0
 1067 0010 00000000 		.word	0
 1068 0014 00000000 		.word	0
 1069 0018 00000000 		.word	0
 1070              		.global	num5
 1071              		.section	.data.num5,"aw"
 1072              		.align	2
 1075              	num5:
 1076 0000 00000000 		.word	0
 1077 0004 01000000 		.word	1
 1078 0008 00000000 		.word	0
 1079 000c 00000000 		.word	0
 1080 0010 01000000 		.word	1
 1081 0014 00000000 		.word	0
 1082 0018 00000000 		.word	0
 1083              		.global	num4
 1084              		.section	.data.num4,"aw"
 1085              		.align	2
 1088              	num4:
 1089 0000 01000000 		.word	1
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 32


 1090 0004 00000000 		.word	0
 1091 0008 00000000 		.word	0
 1092 000c 01000000 		.word	1
 1093 0010 01000000 		.word	1
 1094 0014 00000000 		.word	0
 1095 0018 00000000 		.word	0
 1096              		.global	num3
 1097              		.section	.data.num3,"aw"
 1098              		.align	2
 1101              	num3:
 1102 0000 00000000 		.word	0
 1103 0004 00000000 		.word	0
 1104 0008 00000000 		.word	0
 1105 000c 00000000 		.word	0
 1106 0010 01000000 		.word	1
 1107 0014 01000000 		.word	1
 1108 0018 00000000 		.word	0
 1109              		.global	num2
 1110              		.section	.data.num2,"aw"
 1111              		.align	2
 1114              	num2:
 1115 0000 00000000 		.word	0
 1116 0004 00000000 		.word	0
 1117 0008 01000000 		.word	1
 1118 000c 00000000 		.word	0
 1119 0010 00000000 		.word	0
 1120 0014 01000000 		.word	1
 1121 0018 00000000 		.word	0
 1122              		.global	num1
 1123              		.section	.data.num1,"aw"
 1124              		.align	2
 1127              	num1:
 1128 0000 01000000 		.word	1
 1129 0004 00000000 		.word	0
 1130 0008 00000000 		.word	0
 1131 000c 01000000 		.word	1
 1132 0010 01000000 		.word	1
 1133 0014 01000000 		.word	1
 1134 0018 01000000 		.word	1
 1135              		.global	num0
 1136              		.section	.data.num0,"aw"
 1137              		.align	2
 1140              	num0:
 1141 0000 00000000 		.word	0
 1142 0004 00000000 		.word	0
 1143 0008 00000000 		.word	0
 1144 000c 00000000 		.word	0
 1145 0010 00000000 		.word	0
 1146 0014 00000000 		.word	0
 1147 0018 01000000 		.word	1
 1148              		.global	nextState
 1149              		.section	.bss.nextState,"aw",%nobits
 1150              		.align	2
 1153              	nextState:
 1154 0000 00000000 		.space	4
 1155              		.global	currentState
 1156              		.section	.bss.currentState,"aw",%nobits
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 33


 1157              		.align	2
 1160              	currentState:
 1161 0000 00000000 		.space	4
 1162              		.global	htim2
 1163              		.section	.bss.htim2,"aw",%nobits
 1164              		.align	2
 1167              	htim2:
 1168 0000 00000000 		.space	72
 1168      00000000 
 1168      00000000 
 1168      00000000 
 1168      00000000 
 1169              		.text
 1170              	.Letext0:
 1171              		.file 3 "d:\\armgnu\\12.3 rel1\\arm-none-eabi\\include\\machine\\_default_types.h"
 1172              		.file 4 "d:\\armgnu\\12.3 rel1\\arm-none-eabi\\include\\sys\\_stdint.h"
 1173              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 1174              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1175              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1176              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1177              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1178              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1179              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1180              		.file 12 "Core/Inc/software_time.h"
 1181              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1182              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1183              		.file 15 "<built-in>"
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:141    .text.MX_GPIO_Init:00000080 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:148    .text.clearAllLed:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:154    .text.clearAllLed:00000000 clearAllLed
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:207    .text.clearAllLed:00000044 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:212    .text.changeState:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:218    .text.changeState:00000000 changeState
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:240    .text.changeState:00000010 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:244    .text.changeState:00000014 $t
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:358    .text.changeState:0000009c $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1153   .bss.nextState:00000000 nextState
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:364    .text.displayNumber:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:370    .text.displayNumber:00000000 displayNumber
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:438    .text.displayNumber:00000050 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:443    .text.display7Seg:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:449    .text.display7Seg:00000000 display7Seg
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:467    .text.display7Seg:0000000a $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:477    .text.display7Seg:00000014 $t
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:583    .text.display7Seg:00000064 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1140   .data.num0:00000000 num0
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1127   .data.num1:00000000 num1
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1114   .data.num2:00000000 num2
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1101   .data.num3:00000000 num3
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1088   .data.num4:00000000 num4
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1075   .data.num5:00000000 num5
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1062   .data.num6:00000000 num6
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1049   .data.num7:00000000 num7
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1042   .bss.num8:00000000 num8
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1029   .data.num9:00000000 num9
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:597    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:603    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:625    .text.Error_Handler:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:631    .text.Error_Handler:00000000 Error_Handler
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:663    .text.MX_TIM2_Init:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:668    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:771    .text.MX_TIM2_Init:00000064 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1167   .bss.htim2:00000000 htim2
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:776    .text.SystemClock_Config:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:782    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:875    .text.main:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:881    .text.main:00000000 main
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1015   .text.main:00000090 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1160   .bss.currentState:00000000 currentState
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1026   .data.num9:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1039   .bss.num8:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1046   .data.num7:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1059   .data.num6:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1072   .data.num5:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1085   .data.num4:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1098   .data.num3:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1111   .data.num2:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1124   .data.num1:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1137   .data.num0:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1150   .bss.nextState:00000000 $d
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s 			page 35


C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1157   .bss.currentState:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccw1vRMQ.s:1164   .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
timerRun
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
setTimer1
setTimer2
timer2_flag
timer1_flag
