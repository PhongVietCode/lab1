ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB69:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "software_time.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_TIM2_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** enum lightState
  60:Core/Src/main.c **** {
  61:Core/Src/main.c ****   RED,
  62:Core/Src/main.c ****   YELLOW,
  63:Core/Src/main.c ****   GREEN
  64:Core/Src/main.c **** };
  65:Core/Src/main.c **** int changeState(int state)
  66:Core/Src/main.c **** {
  67:Core/Src/main.c ****   switch (state)
  68:Core/Src/main.c ****   {
  69:Core/Src/main.c ****   case RED:
  70:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, 0);
  71:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GREEN_GPIO_Port, LED_GREEN_Pin, 1);
  72:Core/Src/main.c ****     return 500;
  73:Core/Src/main.c ****     break;
  74:Core/Src/main.c ****   case YELLOW:
  75:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_YELLOW_GPIO_Port, LED_YELLOW_Pin, 0);
  76:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, 1);
  77:Core/Src/main.c ****     return 200;
  78:Core/Src/main.c ****     break;
  79:Core/Src/main.c ****   case GREEN:
  80:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_YELLOW_GPIO_Port, LED_YELLOW_Pin, 1);
  81:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GREEN_GPIO_Port, LED_GREEN_Pin, 0);
  82:Core/Src/main.c ****     return 300;
  83:Core/Src/main.c ****     break;
  84:Core/Src/main.c ****   default:
  85:Core/Src/main.c ****     return 0;
  86:Core/Src/main.c ****   }
  87:Core/Src/main.c **** }
  88:Core/Src/main.c **** /* USER CODE END 0 */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /**
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 3


  91:Core/Src/main.c ****  * @brief  The application entry point.
  92:Core/Src/main.c ****  * @retval int
  93:Core/Src/main.c ****  */
  94:Core/Src/main.c **** int main(void)
  95:Core/Src/main.c **** {
  96:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END 1 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 103:Core/Src/main.c ****   HAL_Init();
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE END Init */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Configure the system clock */
 110:Core/Src/main.c ****   SystemClock_Config();
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END SysInit */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Initialize all configured peripherals */
 117:Core/Src/main.c ****   MX_GPIO_Init();
 118:Core/Src/main.c ****   MX_TIM2_Init();
 119:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 120:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 121:Core/Src/main.c ****   /* USER CODE END 2 */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* Infinite loop */
 124:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 125:Core/Src/main.c ****   setTimer1(500);
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, 0);
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_YELLOW_GPIO_Port, LED_YELLOW_Pin, 1);
 128:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GREEN_GPIO_Port, LED_GREEN_Pin, 1);
 129:Core/Src/main.c ****   int currentState = RED;
 130:Core/Src/main.c ****   int newTime = 0;
 131:Core/Src/main.c ****   while (1)
 132:Core/Src/main.c ****   {
 133:Core/Src/main.c ****     if (timer1_flag == 1)
 134:Core/Src/main.c ****     {
 135:Core/Src/main.c ****       currentState++;
 136:Core/Src/main.c ****       newTime = changeState(currentState % 3);
 137:Core/Src/main.c ****       setTimer1(newTime);
 138:Core/Src/main.c ****     }
 139:Core/Src/main.c ****     /* USER CODE END WHILE */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c ****   /* USER CODE END 3 */
 144:Core/Src/main.c **** }
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** /**
 147:Core/Src/main.c ****  * @brief System Clock Configuration
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 4


 148:Core/Src/main.c ****  * @retval None
 149:Core/Src/main.c ****  */
 150:Core/Src/main.c **** void SystemClock_Config(void)
 151:Core/Src/main.c **** {
 152:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 153:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 156:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 157:Core/Src/main.c ****    */
 158:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 162:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 163:Core/Src/main.c ****   {
 164:Core/Src/main.c ****     Error_Handler();
 165:Core/Src/main.c ****   }
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 168:Core/Src/main.c ****    */
 169:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 170:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 171:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 172:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 173:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 176:Core/Src/main.c ****   {
 177:Core/Src/main.c ****     Error_Handler();
 178:Core/Src/main.c ****   }
 179:Core/Src/main.c **** }
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /**
 182:Core/Src/main.c ****  * @brief TIM2 Initialization Function
 183:Core/Src/main.c ****  * @param None
 184:Core/Src/main.c ****  * @retval None
 185:Core/Src/main.c ****  */
 186:Core/Src/main.c **** static void MX_TIM2_Init(void)
 187:Core/Src/main.c **** {
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 194:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 199:Core/Src/main.c ****   htim2.Instance = TIM2;
 200:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 201:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 202:Core/Src/main.c ****   htim2.Init.Period = 9;
 203:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 204:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 5


 205:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 210:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 211:Core/Src/main.c ****   {
 212:Core/Src/main.c ****     Error_Handler();
 213:Core/Src/main.c ****   }
 214:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 215:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 216:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 217:Core/Src/main.c ****   {
 218:Core/Src/main.c ****     Error_Handler();
 219:Core/Src/main.c ****   }
 220:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 223:Core/Src/main.c **** }
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** /**
 226:Core/Src/main.c ****  * @brief GPIO Initialization Function
 227:Core/Src/main.c ****  * @param None
 228:Core/Src/main.c ****  * @retval None
 229:Core/Src/main.c ****  */
 230:Core/Src/main.c **** static void MX_GPIO_Init(void)
 231:Core/Src/main.c **** {
  26              		.loc 1 231 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
 232:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 232 3 view .LVU1
  40              		.loc 1 232 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0294     		str	r4, [sp, #8]
  43 0008 0394     		str	r4, [sp, #12]
  44 000a 0494     		str	r4, [sp, #16]
  45 000c 0594     		str	r4, [sp, #20]
 233:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 234:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 237:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  46              		.loc 1 237 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 237 3 view .LVU4
  49              		.loc 1 237 3 view .LVU5
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 6


  50 000e 0E4B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F00402 		orr	r2, r2, #4
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 237 3 view .LVU6
  55 0018 9B69     		ldr	r3, [r3, #24]
  56 001a 03F00403 		and	r3, r3, #4
  57 001e 0193     		str	r3, [sp, #4]
  58              		.loc 1 237 3 view .LVU7
  59 0020 019B     		ldr	r3, [sp, #4]
  60              	.LBE4:
  61              		.loc 1 237 3 view .LVU8
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 240:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, LED_RED_Pin | LED_YELLOW_Pin | LED_GREEN_Pin, GPIO_PIN_RESET);
  62              		.loc 1 240 3 view .LVU9
  63 0022 0A4D     		ldr	r5, .L3+4
  64 0024 2246     		mov	r2, r4
  65 0026 E021     		movs	r1, #224
  66 0028 2846     		mov	r0, r5
  67 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
  68              	.LVL0:
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /*Configure GPIO pins : LED_RED_Pin LED_YELLOW_Pin LED_GREEN_Pin */
 243:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_RED_Pin | LED_YELLOW_Pin | LED_GREEN_Pin;
  69              		.loc 1 243 3 view .LVU10
  70              		.loc 1 243 23 is_stmt 0 view .LVU11
  71 002e E023     		movs	r3, #224
  72 0030 0293     		str	r3, [sp, #8]
 244:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  73              		.loc 1 244 3 is_stmt 1 view .LVU12
  74              		.loc 1 244 24 is_stmt 0 view .LVU13
  75 0032 0123     		movs	r3, #1
  76 0034 0393     		str	r3, [sp, #12]
 245:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  77              		.loc 1 245 3 is_stmt 1 view .LVU14
  78              		.loc 1 245 24 is_stmt 0 view .LVU15
  79 0036 0494     		str	r4, [sp, #16]
 246:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  80              		.loc 1 246 3 is_stmt 1 view .LVU16
  81              		.loc 1 246 25 is_stmt 0 view .LVU17
  82 0038 0223     		movs	r3, #2
  83 003a 0593     		str	r3, [sp, #20]
 247:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  84              		.loc 1 247 3 is_stmt 1 view .LVU18
  85 003c 02A9     		add	r1, sp, #8
  86 003e 2846     		mov	r0, r5
  87 0040 FFF7FEFF 		bl	HAL_GPIO_Init
  88              	.LVL1:
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 250:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 251:Core/Src/main.c **** }
  89              		.loc 1 251 1 is_stmt 0 view .LVU19
  90 0044 07B0     		add	sp, sp, #28
  91              	.LCFI2:
  92              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 7


  93              		@ sp needed
  94 0046 30BD     		pop	{r4, r5, pc}
  95              	.L4:
  96              		.align	2
  97              	.L3:
  98 0048 00100240 		.word	1073876992
  99 004c 00080140 		.word	1073809408
 100              		.cfi_endproc
 101              	.LFE69:
 103              		.section	.text.changeState,"ax",%progbits
 104              		.align	1
 105              		.global	changeState
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 110              	changeState:
 111              	.LVL2:
 112              	.LFB65:
  66:Core/Src/main.c ****   switch (state)
 113              		.loc 1 66 1 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
  66:Core/Src/main.c ****   switch (state)
 117              		.loc 1 66 1 is_stmt 0 view .LVU21
 118 0000 10B5     		push	{r4, lr}
 119              	.LCFI3:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 4, -8
 122              		.cfi_offset 14, -4
  67:Core/Src/main.c ****   {
 123              		.loc 1 67 3 is_stmt 1 view .LVU22
 124 0002 0128     		cmp	r0, #1
 125 0004 12D0     		beq	.L6
 126 0006 0228     		cmp	r0, #2
 127 0008 1DD0     		beq	.L7
 128 000a 08B1     		cbz	r0, .L11
 129 000c 0020     		movs	r0, #0
 130              	.LVL3:
 131              	.L5:
  87:Core/Src/main.c **** /* USER CODE END 0 */
 132              		.loc 1 87 1 is_stmt 0 view .LVU23
 133 000e 10BD     		pop	{r4, pc}
 134              	.LVL4:
 135              	.L11:
  70:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GREEN_GPIO_Port, LED_GREEN_Pin, 1);
 136              		.loc 1 70 5 is_stmt 1 view .LVU24
 137 0010 144C     		ldr	r4, .L12
 138 0012 0022     		movs	r2, #0
 139 0014 2021     		movs	r1, #32
 140 0016 2046     		mov	r0, r4
 141              	.LVL5:
  70:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GREEN_GPIO_Port, LED_GREEN_Pin, 1);
 142              		.loc 1 70 5 is_stmt 0 view .LVU25
 143 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 144              	.LVL6:
  71:Core/Src/main.c ****     return 500;
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 8


 145              		.loc 1 71 5 is_stmt 1 view .LVU26
 146 001c 0122     		movs	r2, #1
 147 001e 8021     		movs	r1, #128
 148 0020 2046     		mov	r0, r4
 149 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 150              	.LVL7:
  72:Core/Src/main.c ****     break;
 151              		.loc 1 72 5 view .LVU27
  72:Core/Src/main.c ****     break;
 152              		.loc 1 72 12 is_stmt 0 view .LVU28
 153 0026 4FF4FA70 		mov	r0, #500
 154 002a F0E7     		b	.L5
 155              	.LVL8:
 156              	.L6:
  73:Core/Src/main.c ****   case YELLOW:
 157              		.loc 1 73 5 is_stmt 1 view .LVU29
  75:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, 1);
 158              		.loc 1 75 5 view .LVU30
 159 002c 0D4C     		ldr	r4, .L12
 160 002e 0022     		movs	r2, #0
 161 0030 4021     		movs	r1, #64
 162 0032 2046     		mov	r0, r4
 163              	.LVL9:
  75:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, 1);
 164              		.loc 1 75 5 is_stmt 0 view .LVU31
 165 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 166              	.LVL10:
  76:Core/Src/main.c ****     return 200;
 167              		.loc 1 76 5 is_stmt 1 view .LVU32
 168 0038 0122     		movs	r2, #1
 169 003a 2021     		movs	r1, #32
 170 003c 2046     		mov	r0, r4
 171 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL11:
  77:Core/Src/main.c ****     break;
 173              		.loc 1 77 5 view .LVU33
  77:Core/Src/main.c ****     break;
 174              		.loc 1 77 12 is_stmt 0 view .LVU34
 175 0042 C820     		movs	r0, #200
 176 0044 E3E7     		b	.L5
 177              	.LVL12:
 178              	.L7:
  78:Core/Src/main.c ****   case GREEN:
 179              		.loc 1 78 5 is_stmt 1 view .LVU35
  80:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GREEN_GPIO_Port, LED_GREEN_Pin, 0);
 180              		.loc 1 80 5 view .LVU36
 181 0046 074C     		ldr	r4, .L12
 182 0048 0122     		movs	r2, #1
 183 004a 4021     		movs	r1, #64
 184 004c 2046     		mov	r0, r4
 185              	.LVL13:
  80:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GREEN_GPIO_Port, LED_GREEN_Pin, 0);
 186              		.loc 1 80 5 is_stmt 0 view .LVU37
 187 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 188              	.LVL14:
  81:Core/Src/main.c ****     return 300;
 189              		.loc 1 81 5 is_stmt 1 view .LVU38
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 9


 190 0052 0022     		movs	r2, #0
 191 0054 8021     		movs	r1, #128
 192 0056 2046     		mov	r0, r4
 193 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 194              	.LVL15:
  82:Core/Src/main.c ****     break;
 195              		.loc 1 82 5 view .LVU39
  82:Core/Src/main.c ****     break;
 196              		.loc 1 82 12 is_stmt 0 view .LVU40
 197 005c 4FF49670 		mov	r0, #300
 198 0060 D5E7     		b	.L5
 199              	.L13:
 200 0062 00BF     		.align	2
 201              	.L12:
 202 0064 00080140 		.word	1073809408
 203              		.cfi_endproc
 204              	.LFE65:
 206              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 207              		.align	1
 208              		.global	HAL_TIM_PeriodElapsedCallback
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 213              	HAL_TIM_PeriodElapsedCallback:
 214              	.LVL16:
 215              	.LFB70:
 252:Core/Src/main.c **** 
 253:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 254:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 255:Core/Src/main.c **** {
 216              		.loc 1 255 1 is_stmt 1 view -0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		.loc 1 255 1 is_stmt 0 view .LVU42
 221 0000 08B5     		push	{r3, lr}
 222              	.LCFI4:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
 256:Core/Src/main.c ****   timerRun();
 226              		.loc 1 256 3 is_stmt 1 view .LVU43
 227 0002 FFF7FEFF 		bl	timerRun
 228              	.LVL17:
 257:Core/Src/main.c **** }
 229              		.loc 1 257 1 is_stmt 0 view .LVU44
 230 0006 08BD     		pop	{r3, pc}
 231              		.cfi_endproc
 232              	.LFE70:
 234              		.section	.text.Error_Handler,"ax",%progbits
 235              		.align	1
 236              		.global	Error_Handler
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 241              	Error_Handler:
 242              	.LFB71:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 10


 258:Core/Src/main.c **** /* USER CODE END 4 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** /**
 261:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 262:Core/Src/main.c ****  * @retval None
 263:Core/Src/main.c ****  */
 264:Core/Src/main.c **** void Error_Handler(void)
 265:Core/Src/main.c **** {
 243              		.loc 1 265 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ Volatile: function does not return.
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 266:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 267:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 268:Core/Src/main.c ****   __disable_irq();
 249              		.loc 1 268 3 view .LVU46
 250              	.LBB5:
 251              	.LBI5:
 252              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 11


  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 12


  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 253              		.loc 2 140 27 view .LVU47
 254              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 255              		.loc 2 142 3 view .LVU48
 256              		.syntax unified
 257              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 258 0000 72B6     		cpsid i
 259              	@ 0 "" 2
 260              		.thumb
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 13


 261              		.syntax unified
 262              	.L17:
 263              	.LBE6:
 264              	.LBE5:
 269:Core/Src/main.c ****   while (1)
 265              		.loc 1 269 3 discriminator 1 view .LVU49
 270:Core/Src/main.c ****   {
 271:Core/Src/main.c ****   }
 266              		.loc 1 271 3 discriminator 1 view .LVU50
 269:Core/Src/main.c ****   while (1)
 267              		.loc 1 269 9 discriminator 1 view .LVU51
 268 0002 FEE7     		b	.L17
 269              		.cfi_endproc
 270              	.LFE71:
 272              		.section	.text.MX_TIM2_Init,"ax",%progbits
 273              		.align	1
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 278              	MX_TIM2_Init:
 279              	.LFB68:
 187:Core/Src/main.c **** 
 280              		.loc 1 187 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 24
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284 0000 00B5     		push	{lr}
 285              	.LCFI5:
 286              		.cfi_def_cfa_offset 4
 287              		.cfi_offset 14, -4
 288 0002 87B0     		sub	sp, sp, #28
 289              	.LCFI6:
 290              		.cfi_def_cfa_offset 32
 193:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 291              		.loc 1 193 3 view .LVU53
 193:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 292              		.loc 1 193 26 is_stmt 0 view .LVU54
 293 0004 0023     		movs	r3, #0
 294 0006 0293     		str	r3, [sp, #8]
 295 0008 0393     		str	r3, [sp, #12]
 296 000a 0493     		str	r3, [sp, #16]
 297 000c 0593     		str	r3, [sp, #20]
 194:Core/Src/main.c **** 
 298              		.loc 1 194 3 is_stmt 1 view .LVU55
 194:Core/Src/main.c **** 
 299              		.loc 1 194 27 is_stmt 0 view .LVU56
 300 000e 0093     		str	r3, [sp]
 301 0010 0193     		str	r3, [sp, #4]
 199:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 302              		.loc 1 199 3 is_stmt 1 view .LVU57
 199:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 303              		.loc 1 199 18 is_stmt 0 view .LVU58
 304 0012 1448     		ldr	r0, .L26
 305 0014 4FF08042 		mov	r2, #1073741824
 306 0018 0260     		str	r2, [r0]
 200:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 307              		.loc 1 200 3 is_stmt 1 view .LVU59
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 14


 200:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 308              		.loc 1 200 24 is_stmt 0 view .LVU60
 309 001a 41F63F72 		movw	r2, #7999
 310 001e 4260     		str	r2, [r0, #4]
 201:Core/Src/main.c ****   htim2.Init.Period = 9;
 311              		.loc 1 201 3 is_stmt 1 view .LVU61
 201:Core/Src/main.c ****   htim2.Init.Period = 9;
 312              		.loc 1 201 26 is_stmt 0 view .LVU62
 313 0020 8360     		str	r3, [r0, #8]
 202:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 314              		.loc 1 202 3 is_stmt 1 view .LVU63
 202:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 315              		.loc 1 202 21 is_stmt 0 view .LVU64
 316 0022 0922     		movs	r2, #9
 317 0024 C260     		str	r2, [r0, #12]
 203:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 318              		.loc 1 203 3 is_stmt 1 view .LVU65
 203:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 319              		.loc 1 203 28 is_stmt 0 view .LVU66
 320 0026 0361     		str	r3, [r0, #16]
 204:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 321              		.loc 1 204 3 is_stmt 1 view .LVU67
 204:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 322              		.loc 1 204 32 is_stmt 0 view .LVU68
 323 0028 8361     		str	r3, [r0, #24]
 205:Core/Src/main.c ****   {
 324              		.loc 1 205 3 is_stmt 1 view .LVU69
 205:Core/Src/main.c ****   {
 325              		.loc 1 205 7 is_stmt 0 view .LVU70
 326 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 327              	.LVL18:
 205:Core/Src/main.c ****   {
 328              		.loc 1 205 6 view .LVU71
 329 002e 90B9     		cbnz	r0, .L23
 209:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 330              		.loc 1 209 3 is_stmt 1 view .LVU72
 209:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 331              		.loc 1 209 34 is_stmt 0 view .LVU73
 332 0030 4FF48053 		mov	r3, #4096
 333 0034 0293     		str	r3, [sp, #8]
 210:Core/Src/main.c ****   {
 334              		.loc 1 210 3 is_stmt 1 view .LVU74
 210:Core/Src/main.c ****   {
 335              		.loc 1 210 7 is_stmt 0 view .LVU75
 336 0036 02A9     		add	r1, sp, #8
 337 0038 0A48     		ldr	r0, .L26
 338 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 339              	.LVL19:
 210:Core/Src/main.c ****   {
 340              		.loc 1 210 6 view .LVU76
 341 003e 60B9     		cbnz	r0, .L24
 214:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 342              		.loc 1 214 3 is_stmt 1 view .LVU77
 214:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 343              		.loc 1 214 37 is_stmt 0 view .LVU78
 344 0040 0023     		movs	r3, #0
 345 0042 0093     		str	r3, [sp]
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 15


 215:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 346              		.loc 1 215 3 is_stmt 1 view .LVU79
 215:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 347              		.loc 1 215 33 is_stmt 0 view .LVU80
 348 0044 0193     		str	r3, [sp, #4]
 216:Core/Src/main.c ****   {
 349              		.loc 1 216 3 is_stmt 1 view .LVU81
 216:Core/Src/main.c ****   {
 350              		.loc 1 216 7 is_stmt 0 view .LVU82
 351 0046 6946     		mov	r1, sp
 352 0048 0648     		ldr	r0, .L26
 353 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 354              	.LVL20:
 216:Core/Src/main.c ****   {
 355              		.loc 1 216 6 view .LVU83
 356 004e 30B9     		cbnz	r0, .L25
 223:Core/Src/main.c **** 
 357              		.loc 1 223 1 view .LVU84
 358 0050 07B0     		add	sp, sp, #28
 359              	.LCFI7:
 360              		.cfi_remember_state
 361              		.cfi_def_cfa_offset 4
 362              		@ sp needed
 363 0052 5DF804FB 		ldr	pc, [sp], #4
 364              	.L23:
 365              	.LCFI8:
 366              		.cfi_restore_state
 207:Core/Src/main.c ****   }
 367              		.loc 1 207 5 is_stmt 1 view .LVU85
 368 0056 FFF7FEFF 		bl	Error_Handler
 369              	.LVL21:
 370              	.L24:
 212:Core/Src/main.c ****   }
 371              		.loc 1 212 5 view .LVU86
 372 005a FFF7FEFF 		bl	Error_Handler
 373              	.LVL22:
 374              	.L25:
 218:Core/Src/main.c ****   }
 375              		.loc 1 218 5 view .LVU87
 376 005e FFF7FEFF 		bl	Error_Handler
 377              	.LVL23:
 378              	.L27:
 379 0062 00BF     		.align	2
 380              	.L26:
 381 0064 00000000 		.word	htim2
 382              		.cfi_endproc
 383              	.LFE68:
 385              		.section	.text.SystemClock_Config,"ax",%progbits
 386              		.align	1
 387              		.global	SystemClock_Config
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 392              	SystemClock_Config:
 393              	.LFB67:
 151:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 394              		.loc 1 151 1 view -0
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 16


 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 64
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398 0000 00B5     		push	{lr}
 399              	.LCFI9:
 400              		.cfi_def_cfa_offset 4
 401              		.cfi_offset 14, -4
 402 0002 91B0     		sub	sp, sp, #68
 403              	.LCFI10:
 404              		.cfi_def_cfa_offset 72
 152:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 405              		.loc 1 152 3 view .LVU89
 152:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 406              		.loc 1 152 22 is_stmt 0 view .LVU90
 407 0004 2822     		movs	r2, #40
 408 0006 0021     		movs	r1, #0
 409 0008 06A8     		add	r0, sp, #24
 410 000a FFF7FEFF 		bl	memset
 411              	.LVL24:
 153:Core/Src/main.c **** 
 412              		.loc 1 153 3 is_stmt 1 view .LVU91
 153:Core/Src/main.c **** 
 413              		.loc 1 153 22 is_stmt 0 view .LVU92
 414 000e 0023     		movs	r3, #0
 415 0010 0193     		str	r3, [sp, #4]
 416 0012 0293     		str	r3, [sp, #8]
 417 0014 0393     		str	r3, [sp, #12]
 418 0016 0493     		str	r3, [sp, #16]
 419 0018 0593     		str	r3, [sp, #20]
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 420              		.loc 1 158 3 is_stmt 1 view .LVU93
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 421              		.loc 1 158 36 is_stmt 0 view .LVU94
 422 001a 0223     		movs	r3, #2
 423 001c 0693     		str	r3, [sp, #24]
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 424              		.loc 1 159 3 is_stmt 1 view .LVU95
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 425              		.loc 1 159 30 is_stmt 0 view .LVU96
 426 001e 0123     		movs	r3, #1
 427 0020 0A93     		str	r3, [sp, #40]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 428              		.loc 1 160 3 is_stmt 1 view .LVU97
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 429              		.loc 1 160 41 is_stmt 0 view .LVU98
 430 0022 1023     		movs	r3, #16
 431 0024 0B93     		str	r3, [sp, #44]
 161:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 432              		.loc 1 161 3 is_stmt 1 view .LVU99
 162:Core/Src/main.c ****   {
 433              		.loc 1 162 3 view .LVU100
 162:Core/Src/main.c ****   {
 434              		.loc 1 162 7 is_stmt 0 view .LVU101
 435 0026 06A8     		add	r0, sp, #24
 436 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 437              	.LVL25:
 162:Core/Src/main.c ****   {
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 17


 438              		.loc 1 162 6 view .LVU102
 439 002c 68B9     		cbnz	r0, .L32
 169:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 440              		.loc 1 169 3 is_stmt 1 view .LVU103
 169:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 441              		.loc 1 169 31 is_stmt 0 view .LVU104
 442 002e 0F23     		movs	r3, #15
 443 0030 0193     		str	r3, [sp, #4]
 170:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 444              		.loc 1 170 3 is_stmt 1 view .LVU105
 170:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 445              		.loc 1 170 34 is_stmt 0 view .LVU106
 446 0032 0021     		movs	r1, #0
 447 0034 0291     		str	r1, [sp, #8]
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 448              		.loc 1 171 3 is_stmt 1 view .LVU107
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 449              		.loc 1 171 35 is_stmt 0 view .LVU108
 450 0036 0391     		str	r1, [sp, #12]
 172:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 451              		.loc 1 172 3 is_stmt 1 view .LVU109
 172:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 452              		.loc 1 172 36 is_stmt 0 view .LVU110
 453 0038 0491     		str	r1, [sp, #16]
 173:Core/Src/main.c **** 
 454              		.loc 1 173 3 is_stmt 1 view .LVU111
 173:Core/Src/main.c **** 
 455              		.loc 1 173 36 is_stmt 0 view .LVU112
 456 003a 0591     		str	r1, [sp, #20]
 175:Core/Src/main.c ****   {
 457              		.loc 1 175 3 is_stmt 1 view .LVU113
 175:Core/Src/main.c ****   {
 458              		.loc 1 175 7 is_stmt 0 view .LVU114
 459 003c 01A8     		add	r0, sp, #4
 460 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 461              	.LVL26:
 175:Core/Src/main.c ****   {
 462              		.loc 1 175 6 view .LVU115
 463 0042 20B9     		cbnz	r0, .L33
 179:Core/Src/main.c **** 
 464              		.loc 1 179 1 view .LVU116
 465 0044 11B0     		add	sp, sp, #68
 466              	.LCFI11:
 467              		.cfi_remember_state
 468              		.cfi_def_cfa_offset 4
 469              		@ sp needed
 470 0046 5DF804FB 		ldr	pc, [sp], #4
 471              	.L32:
 472              	.LCFI12:
 473              		.cfi_restore_state
 164:Core/Src/main.c ****   }
 474              		.loc 1 164 5 is_stmt 1 view .LVU117
 475 004a FFF7FEFF 		bl	Error_Handler
 476              	.LVL27:
 477              	.L33:
 177:Core/Src/main.c ****   }
 478              		.loc 1 177 5 view .LVU118
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 18


 479 004e FFF7FEFF 		bl	Error_Handler
 480              	.LVL28:
 481              		.cfi_endproc
 482              	.LFE67:
 484              		.section	.text.main,"ax",%progbits
 485              		.align	1
 486              		.global	main
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 491              	main:
 492              	.LFB66:
  95:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 493              		.loc 1 95 1 view -0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497 0000 10B5     		push	{r4, lr}
 498              	.LCFI13:
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 4, -8
 501              		.cfi_offset 14, -4
 103:Core/Src/main.c **** 
 502              		.loc 1 103 3 view .LVU120
 503 0002 FFF7FEFF 		bl	HAL_Init
 504              	.LVL29:
 110:Core/Src/main.c **** 
 505              		.loc 1 110 3 view .LVU121
 506 0006 FFF7FEFF 		bl	SystemClock_Config
 507              	.LVL30:
 117:Core/Src/main.c ****   MX_TIM2_Init();
 508              		.loc 1 117 3 view .LVU122
 509 000a FFF7FEFF 		bl	MX_GPIO_Init
 510              	.LVL31:
 118:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 511              		.loc 1 118 3 view .LVU123
 512 000e FFF7FEFF 		bl	MX_TIM2_Init
 513              	.LVL32:
 120:Core/Src/main.c ****   /* USER CODE END 2 */
 514              		.loc 1 120 3 view .LVU124
 515 0012 1548     		ldr	r0, .L38
 516 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 517              	.LVL33:
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, 0);
 518              		.loc 1 125 3 view .LVU125
 519 0018 4FF4FA70 		mov	r0, #500
 520 001c FFF7FEFF 		bl	setTimer1
 521              	.LVL34:
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_YELLOW_GPIO_Port, LED_YELLOW_Pin, 1);
 522              		.loc 1 126 3 view .LVU126
 523 0020 124C     		ldr	r4, .L38+4
 524 0022 0022     		movs	r2, #0
 525 0024 2021     		movs	r1, #32
 526 0026 2046     		mov	r0, r4
 527 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 528              	.LVL35:
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GREEN_GPIO_Port, LED_GREEN_Pin, 1);
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 19


 529              		.loc 1 127 3 view .LVU127
 530 002c 0122     		movs	r2, #1
 531 002e 4021     		movs	r1, #64
 532 0030 2046     		mov	r0, r4
 533 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 534              	.LVL36:
 128:Core/Src/main.c ****   int currentState = RED;
 535              		.loc 1 128 3 view .LVU128
 536 0036 0122     		movs	r2, #1
 537 0038 8021     		movs	r1, #128
 538 003a 2046     		mov	r0, r4
 539 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 540              	.LVL37:
 129:Core/Src/main.c ****   int newTime = 0;
 541              		.loc 1 129 3 view .LVU129
 130:Core/Src/main.c ****   while (1)
 542              		.loc 1 130 3 view .LVU130
 129:Core/Src/main.c ****   int newTime = 0;
 543              		.loc 1 129 7 is_stmt 0 view .LVU131
 544 0040 0024     		movs	r4, #0
 545              	.LVL38:
 546              	.L35:
 131:Core/Src/main.c ****   {
 547              		.loc 1 131 3 is_stmt 1 view .LVU132
 133:Core/Src/main.c ****     {
 548              		.loc 1 133 5 view .LVU133
 133:Core/Src/main.c ****     {
 549              		.loc 1 133 21 is_stmt 0 view .LVU134
 550 0042 0B4B     		ldr	r3, .L38+8
 551 0044 1B68     		ldr	r3, [r3]
 133:Core/Src/main.c ****     {
 552              		.loc 1 133 8 view .LVU135
 553 0046 012B     		cmp	r3, #1
 554 0048 FBD1     		bne	.L35
 135:Core/Src/main.c ****       newTime = changeState(currentState % 3);
 555              		.loc 1 135 7 is_stmt 1 view .LVU136
 135:Core/Src/main.c ****       newTime = changeState(currentState % 3);
 556              		.loc 1 135 19 is_stmt 0 view .LVU137
 557 004a 0134     		adds	r4, r4, #1
 558              	.LVL39:
 136:Core/Src/main.c ****       setTimer1(newTime);
 559              		.loc 1 136 7 is_stmt 1 view .LVU138
 136:Core/Src/main.c ****       setTimer1(newTime);
 560              		.loc 1 136 17 is_stmt 0 view .LVU139
 561 004c 0948     		ldr	r0, .L38+12
 562 004e 80FB0430 		smull	r3, r0, r0, r4
 563 0052 A0EBE470 		sub	r0, r0, r4, asr #31
 564 0056 00EB4000 		add	r0, r0, r0, lsl #1
 565 005a 201A     		subs	r0, r4, r0
 566 005c FFF7FEFF 		bl	changeState
 567              	.LVL40:
 137:Core/Src/main.c ****     }
 568              		.loc 1 137 7 is_stmt 1 view .LVU140
 569 0060 FFF7FEFF 		bl	setTimer1
 570              	.LVL41:
 137:Core/Src/main.c ****     }
 571              		.loc 1 137 7 is_stmt 0 view .LVU141
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 20


 572 0064 EDE7     		b	.L35
 573              	.L39:
 574 0066 00BF     		.align	2
 575              	.L38:
 576 0068 00000000 		.word	htim2
 577 006c 00080140 		.word	1073809408
 578 0070 00000000 		.word	timer1_flag
 579 0074 56555555 		.word	1431655766
 580              		.cfi_endproc
 581              	.LFE66:
 583              		.global	htim2
 584              		.section	.bss.htim2,"aw",%nobits
 585              		.align	2
 588              	htim2:
 589 0000 00000000 		.space	72
 589      00000000 
 589      00000000 
 589      00000000 
 589      00000000 
 590              		.text
 591              	.Letext0:
 592              		.file 3 "d:\\armgnu\\12.3 rel1\\arm-none-eabi\\include\\machine\\_default_types.h"
 593              		.file 4 "d:\\armgnu\\12.3 rel1\\arm-none-eabi\\include\\sys\\_stdint.h"
 594              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 595              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 596              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 597              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 598              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 599              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 600              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 601              		.file 12 "Core/Inc/software_time.h"
 602              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 603              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 604              		.file 15 "<built-in>"
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:98     .text.MX_GPIO_Init:00000048 $d
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:104    .text.changeState:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:110    .text.changeState:00000000 changeState
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:202    .text.changeState:00000064 $d
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:207    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:213    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:235    .text.Error_Handler:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:241    .text.Error_Handler:00000000 Error_Handler
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:273    .text.MX_TIM2_Init:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:278    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:381    .text.MX_TIM2_Init:00000064 $d
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:588    .bss.htim2:00000000 htim2
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:386    .text.SystemClock_Config:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:392    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:485    .text.main:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:491    .text.main:00000000 main
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:576    .text.main:00000068 $d
C:\Users\phong\AppData\Local\Temp\ccPzLK8r.s:585    .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
timerRun
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
setTimer1
timer1_flag
