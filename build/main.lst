ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB70:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "software_time.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_TIM2_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** enum lightState
  60:Core/Src/main.c **** {
  61:Core/Src/main.c ****   RED1_GREEN2,
  62:Core/Src/main.c ****   RED1_YELLOW2,
  63:Core/Src/main.c ****   GREEN1_RED2,
  64:Core/Src/main.c ****   YELLOW1_RED2,
  65:Core/Src/main.c **** };
  66:Core/Src/main.c **** int currentState = RED1_GREEN2;
  67:Core/Src/main.c **** int nextState = 0;
  68:Core/Src/main.c **** void clearAllLed()
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, 1);
  71:Core/Src/main.c ****   HAL_GPIO_WritePin(YELLOW1_GPIO_Port, YELLOW1_Pin, 1);
  72:Core/Src/main.c ****   HAL_GPIO_WritePin(GREEN1_GPIO_Port, GREEN1_Pin, 1);
  73:Core/Src/main.c ****   HAL_GPIO_WritePin(RED2_GPIO_Port, RED2_Pin, 1);
  74:Core/Src/main.c ****   HAL_GPIO_WritePin(YELLOW2_GPIO_Port, YELLOW2_Pin, 1);
  75:Core/Src/main.c ****   HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 1);
  76:Core/Src/main.c **** }
  77:Core/Src/main.c **** /// @brief
  78:Core/Src/main.c **** /// @param state: RED1_GREEN2 -> RED1_YELLOW2 -> YELLOW1_RED2 -> GREEN1_RED2 ->  RED1_YELLOW2...
  79:Core/Src/main.c **** /// @return
  80:Core/Src/main.c **** int changeState(int state)
  81:Core/Src/main.c **** {
  82:Core/Src/main.c ****   clearAllLed();
  83:Core/Src/main.c ****   switch (state)
  84:Core/Src/main.c ****   {
  85:Core/Src/main.c ****   case RED1_GREEN2:
  86:Core/Src/main.c ****     HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, 0);
  87:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 0);
  88:Core/Src/main.c ****     nextState = 1;
  89:Core/Src/main.c ****     return 300;
  90:Core/Src/main.c ****   case RED1_YELLOW2:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 3


  91:Core/Src/main.c ****     HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, 0);
  92:Core/Src/main.c ****     HAL_GPIO_WritePin(YELLOW2_GPIO_Port, YELLOW2_Pin, 0);
  93:Core/Src/main.c ****     nextState = 2;
  94:Core/Src/main.c ****     return 200;
  95:Core/Src/main.c ****   case GREEN1_RED2:
  96:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN1_GPIO_Port, GREEN1_Pin, 0);
  97:Core/Src/main.c ****     HAL_GPIO_WritePin(RED2_GPIO_Port, RED2_Pin, 0);
  98:Core/Src/main.c ****     nextState = 3;
  99:Core/Src/main.c ****     return 300;
 100:Core/Src/main.c ****   case YELLOW1_RED2:
 101:Core/Src/main.c ****     HAL_GPIO_WritePin(YELLOW1_GPIO_Port, YELLOW1_Pin, 0);
 102:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 0);
 103:Core/Src/main.c ****     nextState = 0;
 104:Core/Src/main.c ****     return 200;
 105:Core/Src/main.c ****   default:
 106:Core/Src/main.c ****     return 0;
 107:Core/Src/main.c ****   }
 108:Core/Src/main.c **** }
 109:Core/Src/main.c **** /* USER CODE END 0 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /**
 112:Core/Src/main.c ****  * @brief  The application entry point.
 113:Core/Src/main.c ****  * @retval int
 114:Core/Src/main.c ****  */
 115:Core/Src/main.c **** int main(void)
 116:Core/Src/main.c **** {
 117:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE END 1 */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 124:Core/Src/main.c ****   HAL_Init();
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE END Init */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* Configure the system clock */
 131:Core/Src/main.c ****   SystemClock_Config();
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* USER CODE END SysInit */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* Initialize all configured peripherals */
 138:Core/Src/main.c ****   MX_GPIO_Init();
 139:Core/Src/main.c ****   MX_TIM2_Init();
 140:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 141:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 142:Core/Src/main.c ****   /* USER CODE END 2 */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* Infinite loop */
 145:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 146:Core/Src/main.c ****   clearAllLed();
 147:Core/Src/main.c ****   int timer = changeState(currentState);
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 4


 148:Core/Src/main.c ****   setTimer1(timer);
 149:Core/Src/main.c ****   while (1)
 150:Core/Src/main.c ****   {
 151:Core/Src/main.c ****     if (timer1_flag == 1)
 152:Core/Src/main.c ****     {
 153:Core/Src/main.c ****       currentState = nextState;
 154:Core/Src/main.c ****       timer = changeState(currentState);
 155:Core/Src/main.c ****       setTimer1(timer);
 156:Core/Src/main.c ****     }
 157:Core/Src/main.c ****     /* USER CODE END WHILE */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c ****   /* USER CODE END 3 */
 162:Core/Src/main.c **** }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /**
 165:Core/Src/main.c ****  * @brief System Clock Configuration
 166:Core/Src/main.c ****  * @retval None
 167:Core/Src/main.c ****  */
 168:Core/Src/main.c **** void SystemClock_Config(void)
 169:Core/Src/main.c **** {
 170:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 174:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 175:Core/Src/main.c ****    */
 176:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 180:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 181:Core/Src/main.c ****   {
 182:Core/Src/main.c ****     Error_Handler();
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 186:Core/Src/main.c ****    */
 187:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 188:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 189:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****     Error_Handler();
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c **** }
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** /**
 200:Core/Src/main.c ****  * @brief TIM2 Initialization Function
 201:Core/Src/main.c ****  * @param None
 202:Core/Src/main.c ****  * @retval None
 203:Core/Src/main.c ****  */
 204:Core/Src/main.c **** static void MX_TIM2_Init(void)
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 5


 205:Core/Src/main.c **** {
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 212:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 217:Core/Src/main.c ****   htim2.Instance = TIM2;
 218:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 219:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 220:Core/Src/main.c ****   htim2.Init.Period = 9;
 221:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 222:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 223:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 224:Core/Src/main.c ****   {
 225:Core/Src/main.c ****     Error_Handler();
 226:Core/Src/main.c ****   }
 227:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 228:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 229:Core/Src/main.c ****   {
 230:Core/Src/main.c ****     Error_Handler();
 231:Core/Src/main.c ****   }
 232:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 233:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 234:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 235:Core/Src/main.c ****   {
 236:Core/Src/main.c ****     Error_Handler();
 237:Core/Src/main.c ****   }
 238:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 241:Core/Src/main.c **** }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /**
 244:Core/Src/main.c ****  * @brief GPIO Initialization Function
 245:Core/Src/main.c ****  * @param None
 246:Core/Src/main.c ****  * @retval None
 247:Core/Src/main.c ****  */
 248:Core/Src/main.c **** static void MX_GPIO_Init(void)
 249:Core/Src/main.c **** {
  26              		.loc 1 249 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 6


  38              		.cfi_def_cfa_offset 40
 250:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 250 3 view .LVU1
  40              		.loc 1 250 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0294     		str	r4, [sp, #8]
  43 0008 0394     		str	r4, [sp, #12]
  44 000a 0494     		str	r4, [sp, #16]
  45 000c 0594     		str	r4, [sp, #20]
 251:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 252:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 255:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  46              		.loc 1 255 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 255 3 view .LVU4
  49              		.loc 1 255 3 view .LVU5
  50 000e 0E4B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F00402 		orr	r2, r2, #4
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 255 3 view .LVU6
  55 0018 9B69     		ldr	r3, [r3, #24]
  56 001a 03F00403 		and	r3, r3, #4
  57 001e 0193     		str	r3, [sp, #4]
  58              		.loc 1 255 3 view .LVU7
  59 0020 019B     		ldr	r3, [sp, #4]
  60              	.LBE4:
  61              		.loc 1 255 3 view .LVU8
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 258:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, RED1_Pin | YELLOW1_Pin | GREEN1_Pin | RED2_Pin | YELLOW2_Pin | GREEN2_Pi
  62              		.loc 1 258 3 view .LVU9
  63 0022 0A4D     		ldr	r5, .L3+4
  64 0024 2246     		mov	r2, r4
  65 0026 FC21     		movs	r1, #252
  66 0028 2846     		mov	r0, r5
  67 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
  68              	.LVL0:
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /*Configure GPIO pins : RED1_Pin YELLOW1_Pin GREEN1_Pin RED2_Pin
 261:Core/Src/main.c ****                            YELLOW2_Pin GREEN2_Pin */
 262:Core/Src/main.c ****   GPIO_InitStruct.Pin = RED1_Pin | YELLOW1_Pin | GREEN1_Pin | RED2_Pin | YELLOW2_Pin | GREEN2_Pin;
  69              		.loc 1 262 3 view .LVU10
  70              		.loc 1 262 23 is_stmt 0 view .LVU11
  71 002e FC23     		movs	r3, #252
  72 0030 0293     		str	r3, [sp, #8]
 263:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  73              		.loc 1 263 3 is_stmt 1 view .LVU12
  74              		.loc 1 263 24 is_stmt 0 view .LVU13
  75 0032 0123     		movs	r3, #1
  76 0034 0393     		str	r3, [sp, #12]
 264:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  77              		.loc 1 264 3 is_stmt 1 view .LVU14
  78              		.loc 1 264 24 is_stmt 0 view .LVU15
  79 0036 0494     		str	r4, [sp, #16]
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 7


 265:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  80              		.loc 1 265 3 is_stmt 1 view .LVU16
  81              		.loc 1 265 25 is_stmt 0 view .LVU17
  82 0038 0223     		movs	r3, #2
  83 003a 0593     		str	r3, [sp, #20]
 266:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  84              		.loc 1 266 3 is_stmt 1 view .LVU18
  85 003c 02A9     		add	r1, sp, #8
  86 003e 2846     		mov	r0, r5
  87 0040 FFF7FEFF 		bl	HAL_GPIO_Init
  88              	.LVL1:
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 269:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 270:Core/Src/main.c **** }
  89              		.loc 1 270 1 is_stmt 0 view .LVU19
  90 0044 07B0     		add	sp, sp, #28
  91              	.LCFI2:
  92              		.cfi_def_cfa_offset 12
  93              		@ sp needed
  94 0046 30BD     		pop	{r4, r5, pc}
  95              	.L4:
  96              		.align	2
  97              	.L3:
  98 0048 00100240 		.word	1073876992
  99 004c 00080140 		.word	1073809408
 100              		.cfi_endproc
 101              	.LFE70:
 103              		.section	.text.clearAllLed,"ax",%progbits
 104              		.align	1
 105              		.global	clearAllLed
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 110              	clearAllLed:
 111              	.LFB65:
  69:Core/Src/main.c ****   HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, 1);
 112              		.loc 1 69 1 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 10B5     		push	{r4, lr}
 117              	.LCFI3:
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 4, -8
 120              		.cfi_offset 14, -4
  70:Core/Src/main.c ****   HAL_GPIO_WritePin(YELLOW1_GPIO_Port, YELLOW1_Pin, 1);
 121              		.loc 1 70 3 view .LVU21
 122 0002 104C     		ldr	r4, .L7
 123 0004 0122     		movs	r2, #1
 124 0006 0421     		movs	r1, #4
 125 0008 2046     		mov	r0, r4
 126 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL2:
  71:Core/Src/main.c ****   HAL_GPIO_WritePin(GREEN1_GPIO_Port, GREEN1_Pin, 1);
 128              		.loc 1 71 3 view .LVU22
 129 000e 0122     		movs	r2, #1
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 8


 130 0010 0821     		movs	r1, #8
 131 0012 2046     		mov	r0, r4
 132 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 133              	.LVL3:
  72:Core/Src/main.c ****   HAL_GPIO_WritePin(RED2_GPIO_Port, RED2_Pin, 1);
 134              		.loc 1 72 3 view .LVU23
 135 0018 0122     		movs	r2, #1
 136 001a 1021     		movs	r1, #16
 137 001c 2046     		mov	r0, r4
 138 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 139              	.LVL4:
  73:Core/Src/main.c ****   HAL_GPIO_WritePin(YELLOW2_GPIO_Port, YELLOW2_Pin, 1);
 140              		.loc 1 73 3 view .LVU24
 141 0022 0122     		movs	r2, #1
 142 0024 2021     		movs	r1, #32
 143 0026 2046     		mov	r0, r4
 144 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 145              	.LVL5:
  74:Core/Src/main.c ****   HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 1);
 146              		.loc 1 74 3 view .LVU25
 147 002c 0122     		movs	r2, #1
 148 002e 4021     		movs	r1, #64
 149 0030 2046     		mov	r0, r4
 150 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 151              	.LVL6:
  75:Core/Src/main.c **** }
 152              		.loc 1 75 3 view .LVU26
 153 0036 0122     		movs	r2, #1
 154 0038 8021     		movs	r1, #128
 155 003a 2046     		mov	r0, r4
 156 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 157              	.LVL7:
  76:Core/Src/main.c **** /// @brief
 158              		.loc 1 76 1 is_stmt 0 view .LVU27
 159 0040 10BD     		pop	{r4, pc}
 160              	.L8:
 161 0042 00BF     		.align	2
 162              	.L7:
 163 0044 00080140 		.word	1073809408
 164              		.cfi_endproc
 165              	.LFE65:
 167              		.section	.text.changeState,"ax",%progbits
 168              		.align	1
 169              		.global	changeState
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 174              	changeState:
 175              	.LVL8:
 176              	.LFB66:
  81:Core/Src/main.c ****   clearAllLed();
 177              		.loc 1 81 1 is_stmt 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
  81:Core/Src/main.c ****   clearAllLed();
 181              		.loc 1 81 1 is_stmt 0 view .LVU29
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 9


 182 0000 10B5     		push	{r4, lr}
 183              	.LCFI4:
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 14, -4
 187 0002 0446     		mov	r4, r0
  82:Core/Src/main.c ****   switch (state)
 188              		.loc 1 82 3 is_stmt 1 view .LVU30
 189 0004 FFF7FEFF 		bl	clearAllLed
 190              	.LVL9:
  83:Core/Src/main.c ****   {
 191              		.loc 1 83 3 view .LVU31
 192 0008 032C     		cmp	r4, #3
 193 000a 45D8     		bhi	.L16
 194 000c DFE804F0 		tbb	[pc, r4]
 195              	.L12:
 196 0010 02       		.byte	(.L15-.L12)/2
 197 0011 13       		.byte	(.L14-.L12)/2
 198 0012 23       		.byte	(.L13-.L12)/2
 199 0013 34       		.byte	(.L11-.L12)/2
 200              		.p2align 1
 201              	.L15:
  86:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 0);
 202              		.loc 1 86 5 view .LVU32
 203 0014 214C     		ldr	r4, .L18
 204              	.LVL10:
  86:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 0);
 205              		.loc 1 86 5 is_stmt 0 view .LVU33
 206 0016 0022     		movs	r2, #0
 207 0018 0421     		movs	r1, #4
 208 001a 2046     		mov	r0, r4
 209 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 210              	.LVL11:
  87:Core/Src/main.c ****     nextState = 1;
 211              		.loc 1 87 5 is_stmt 1 view .LVU34
 212 0020 0022     		movs	r2, #0
 213 0022 8021     		movs	r1, #128
 214 0024 2046     		mov	r0, r4
 215 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 216              	.LVL12:
  88:Core/Src/main.c ****     return 300;
 217              		.loc 1 88 5 view .LVU35
  88:Core/Src/main.c ****     return 300;
 218              		.loc 1 88 15 is_stmt 0 view .LVU36
 219 002a 1D4B     		ldr	r3, .L18+4
 220 002c 0122     		movs	r2, #1
 221 002e 1A60     		str	r2, [r3]
  89:Core/Src/main.c ****   case RED1_YELLOW2:
 222              		.loc 1 89 5 is_stmt 1 view .LVU37
  89:Core/Src/main.c ****   case RED1_YELLOW2:
 223              		.loc 1 89 12 is_stmt 0 view .LVU38
 224 0030 4FF49670 		mov	r0, #300
 225              	.L9:
 108:Core/Src/main.c **** /* USER CODE END 0 */
 226              		.loc 1 108 1 view .LVU39
 227 0034 10BD     		pop	{r4, pc}
 228              	.LVL13:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 10


 229              	.L14:
  91:Core/Src/main.c ****     HAL_GPIO_WritePin(YELLOW2_GPIO_Port, YELLOW2_Pin, 0);
 230              		.loc 1 91 5 is_stmt 1 view .LVU40
 231 0036 194C     		ldr	r4, .L18
 232              	.LVL14:
  91:Core/Src/main.c ****     HAL_GPIO_WritePin(YELLOW2_GPIO_Port, YELLOW2_Pin, 0);
 233              		.loc 1 91 5 is_stmt 0 view .LVU41
 234 0038 0022     		movs	r2, #0
 235 003a 0421     		movs	r1, #4
 236 003c 2046     		mov	r0, r4
 237 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 238              	.LVL15:
  92:Core/Src/main.c ****     nextState = 2;
 239              		.loc 1 92 5 is_stmt 1 view .LVU42
 240 0042 0022     		movs	r2, #0
 241 0044 4021     		movs	r1, #64
 242 0046 2046     		mov	r0, r4
 243 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 244              	.LVL16:
  93:Core/Src/main.c ****     return 200;
 245              		.loc 1 93 5 view .LVU43
  93:Core/Src/main.c ****     return 200;
 246              		.loc 1 93 15 is_stmt 0 view .LVU44
 247 004c 144B     		ldr	r3, .L18+4
 248 004e 0222     		movs	r2, #2
 249 0050 1A60     		str	r2, [r3]
  94:Core/Src/main.c ****   case GREEN1_RED2:
 250              		.loc 1 94 5 is_stmt 1 view .LVU45
  94:Core/Src/main.c ****   case GREEN1_RED2:
 251              		.loc 1 94 12 is_stmt 0 view .LVU46
 252 0052 C820     		movs	r0, #200
 253 0054 EEE7     		b	.L9
 254              	.LVL17:
 255              	.L13:
  96:Core/Src/main.c ****     HAL_GPIO_WritePin(RED2_GPIO_Port, RED2_Pin, 0);
 256              		.loc 1 96 5 is_stmt 1 view .LVU47
 257 0056 114C     		ldr	r4, .L18
 258              	.LVL18:
  96:Core/Src/main.c ****     HAL_GPIO_WritePin(RED2_GPIO_Port, RED2_Pin, 0);
 259              		.loc 1 96 5 is_stmt 0 view .LVU48
 260 0058 0022     		movs	r2, #0
 261 005a 1021     		movs	r1, #16
 262 005c 2046     		mov	r0, r4
 263 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 264              	.LVL19:
  97:Core/Src/main.c ****     nextState = 3;
 265              		.loc 1 97 5 is_stmt 1 view .LVU49
 266 0062 0022     		movs	r2, #0
 267 0064 2021     		movs	r1, #32
 268 0066 2046     		mov	r0, r4
 269 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 270              	.LVL20:
  98:Core/Src/main.c ****     return 300;
 271              		.loc 1 98 5 view .LVU50
  98:Core/Src/main.c ****     return 300;
 272              		.loc 1 98 15 is_stmt 0 view .LVU51
 273 006c 0C4B     		ldr	r3, .L18+4
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 11


 274 006e 0322     		movs	r2, #3
 275 0070 1A60     		str	r2, [r3]
  99:Core/Src/main.c ****   case YELLOW1_RED2:
 276              		.loc 1 99 5 is_stmt 1 view .LVU52
  99:Core/Src/main.c ****   case YELLOW1_RED2:
 277              		.loc 1 99 12 is_stmt 0 view .LVU53
 278 0072 4FF49670 		mov	r0, #300
 279 0076 DDE7     		b	.L9
 280              	.LVL21:
 281              	.L11:
 101:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 0);
 282              		.loc 1 101 5 is_stmt 1 view .LVU54
 283 0078 084C     		ldr	r4, .L18
 284              	.LVL22:
 101:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, 0);
 285              		.loc 1 101 5 is_stmt 0 view .LVU55
 286 007a 0022     		movs	r2, #0
 287 007c 0821     		movs	r1, #8
 288 007e 2046     		mov	r0, r4
 289 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 290              	.LVL23:
 102:Core/Src/main.c ****     nextState = 0;
 291              		.loc 1 102 5 is_stmt 1 view .LVU56
 292 0084 0022     		movs	r2, #0
 293 0086 8021     		movs	r1, #128
 294 0088 2046     		mov	r0, r4
 295 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 296              	.LVL24:
 103:Core/Src/main.c ****     return 200;
 297              		.loc 1 103 5 view .LVU57
 103:Core/Src/main.c ****     return 200;
 298              		.loc 1 103 15 is_stmt 0 view .LVU58
 299 008e 044B     		ldr	r3, .L18+4
 300 0090 0022     		movs	r2, #0
 301 0092 1A60     		str	r2, [r3]
 104:Core/Src/main.c ****   default:
 302              		.loc 1 104 5 is_stmt 1 view .LVU59
 104:Core/Src/main.c ****   default:
 303              		.loc 1 104 12 is_stmt 0 view .LVU60
 304 0094 C820     		movs	r0, #200
 305 0096 CDE7     		b	.L9
 306              	.LVL25:
 307              	.L16:
  83:Core/Src/main.c ****   {
 308              		.loc 1 83 3 view .LVU61
 309 0098 0020     		movs	r0, #0
 310 009a CBE7     		b	.L9
 311              	.L19:
 312              		.align	2
 313              	.L18:
 314 009c 00080140 		.word	1073809408
 315 00a0 00000000 		.word	nextState
 316              		.cfi_endproc
 317              	.LFE66:
 319              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 320              		.align	1
 321              		.global	HAL_TIM_PeriodElapsedCallback
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 12


 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 326              	HAL_TIM_PeriodElapsedCallback:
 327              	.LVL26:
 328              	.LFB71:
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 273:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 274:Core/Src/main.c **** {
 329              		.loc 1 274 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		.loc 1 274 1 is_stmt 0 view .LVU63
 334 0000 08B5     		push	{r3, lr}
 335              	.LCFI5:
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 3, -8
 338              		.cfi_offset 14, -4
 275:Core/Src/main.c ****   timerRun();
 339              		.loc 1 275 3 is_stmt 1 view .LVU64
 340 0002 FFF7FEFF 		bl	timerRun
 341              	.LVL27:
 276:Core/Src/main.c **** }
 342              		.loc 1 276 1 is_stmt 0 view .LVU65
 343 0006 08BD     		pop	{r3, pc}
 344              		.cfi_endproc
 345              	.LFE71:
 347              		.section	.text.Error_Handler,"ax",%progbits
 348              		.align	1
 349              		.global	Error_Handler
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 354              	Error_Handler:
 355              	.LFB72:
 277:Core/Src/main.c **** /* USER CODE END 4 */
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** /**
 280:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 281:Core/Src/main.c ****  * @retval None
 282:Core/Src/main.c ****  */
 283:Core/Src/main.c **** void Error_Handler(void)
 284:Core/Src/main.c **** {
 356              		.loc 1 284 1 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ Volatile: function does not return.
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 285:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 286:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 287:Core/Src/main.c ****   __disable_irq();
 362              		.loc 1 287 3 view .LVU67
 363              	.LBB5:
 364              	.LBI5:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 13


 365              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 14


  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 15


 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 366              		.loc 2 140 27 view .LVU68
 367              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 368              		.loc 2 142 3 view .LVU69
 369              		.syntax unified
 370              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 371 0000 72B6     		cpsid i
 372              	@ 0 "" 2
 373              		.thumb
 374              		.syntax unified
 375              	.L23:
 376              	.LBE6:
 377              	.LBE5:
 288:Core/Src/main.c ****   while (1)
 378              		.loc 1 288 3 discriminator 1 view .LVU70
 289:Core/Src/main.c ****   {
 290:Core/Src/main.c ****   }
 379              		.loc 1 290 3 discriminator 1 view .LVU71
 288:Core/Src/main.c ****   while (1)
 380              		.loc 1 288 9 discriminator 1 view .LVU72
 381 0002 FEE7     		b	.L23
 382              		.cfi_endproc
 383              	.LFE72:
 385              		.section	.text.MX_TIM2_Init,"ax",%progbits
 386              		.align	1
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 391              	MX_TIM2_Init:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 16


 392              	.LFB69:
 205:Core/Src/main.c **** 
 393              		.loc 1 205 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 24
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397 0000 00B5     		push	{lr}
 398              	.LCFI6:
 399              		.cfi_def_cfa_offset 4
 400              		.cfi_offset 14, -4
 401 0002 87B0     		sub	sp, sp, #28
 402              	.LCFI7:
 403              		.cfi_def_cfa_offset 32
 211:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 404              		.loc 1 211 3 view .LVU74
 211:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 405              		.loc 1 211 26 is_stmt 0 view .LVU75
 406 0004 0023     		movs	r3, #0
 407 0006 0293     		str	r3, [sp, #8]
 408 0008 0393     		str	r3, [sp, #12]
 409 000a 0493     		str	r3, [sp, #16]
 410 000c 0593     		str	r3, [sp, #20]
 212:Core/Src/main.c **** 
 411              		.loc 1 212 3 is_stmt 1 view .LVU76
 212:Core/Src/main.c **** 
 412              		.loc 1 212 27 is_stmt 0 view .LVU77
 413 000e 0093     		str	r3, [sp]
 414 0010 0193     		str	r3, [sp, #4]
 217:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 415              		.loc 1 217 3 is_stmt 1 view .LVU78
 217:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 416              		.loc 1 217 18 is_stmt 0 view .LVU79
 417 0012 1448     		ldr	r0, .L32
 418 0014 4FF08042 		mov	r2, #1073741824
 419 0018 0260     		str	r2, [r0]
 218:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 420              		.loc 1 218 3 is_stmt 1 view .LVU80
 218:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 421              		.loc 1 218 24 is_stmt 0 view .LVU81
 422 001a 41F63F72 		movw	r2, #7999
 423 001e 4260     		str	r2, [r0, #4]
 219:Core/Src/main.c ****   htim2.Init.Period = 9;
 424              		.loc 1 219 3 is_stmt 1 view .LVU82
 219:Core/Src/main.c ****   htim2.Init.Period = 9;
 425              		.loc 1 219 26 is_stmt 0 view .LVU83
 426 0020 8360     		str	r3, [r0, #8]
 220:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 427              		.loc 1 220 3 is_stmt 1 view .LVU84
 220:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 428              		.loc 1 220 21 is_stmt 0 view .LVU85
 429 0022 0922     		movs	r2, #9
 430 0024 C260     		str	r2, [r0, #12]
 221:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 431              		.loc 1 221 3 is_stmt 1 view .LVU86
 221:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 432              		.loc 1 221 28 is_stmt 0 view .LVU87
 433 0026 0361     		str	r3, [r0, #16]
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 17


 222:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 434              		.loc 1 222 3 is_stmt 1 view .LVU88
 222:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 435              		.loc 1 222 32 is_stmt 0 view .LVU89
 436 0028 8361     		str	r3, [r0, #24]
 223:Core/Src/main.c ****   {
 437              		.loc 1 223 3 is_stmt 1 view .LVU90
 223:Core/Src/main.c ****   {
 438              		.loc 1 223 7 is_stmt 0 view .LVU91
 439 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 440              	.LVL28:
 223:Core/Src/main.c ****   {
 441              		.loc 1 223 6 view .LVU92
 442 002e 90B9     		cbnz	r0, .L29
 227:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 443              		.loc 1 227 3 is_stmt 1 view .LVU93
 227:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 444              		.loc 1 227 34 is_stmt 0 view .LVU94
 445 0030 4FF48053 		mov	r3, #4096
 446 0034 0293     		str	r3, [sp, #8]
 228:Core/Src/main.c ****   {
 447              		.loc 1 228 3 is_stmt 1 view .LVU95
 228:Core/Src/main.c ****   {
 448              		.loc 1 228 7 is_stmt 0 view .LVU96
 449 0036 02A9     		add	r1, sp, #8
 450 0038 0A48     		ldr	r0, .L32
 451 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 452              	.LVL29:
 228:Core/Src/main.c ****   {
 453              		.loc 1 228 6 view .LVU97
 454 003e 60B9     		cbnz	r0, .L30
 232:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 455              		.loc 1 232 3 is_stmt 1 view .LVU98
 232:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 456              		.loc 1 232 37 is_stmt 0 view .LVU99
 457 0040 0023     		movs	r3, #0
 458 0042 0093     		str	r3, [sp]
 233:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 459              		.loc 1 233 3 is_stmt 1 view .LVU100
 233:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 460              		.loc 1 233 33 is_stmt 0 view .LVU101
 461 0044 0193     		str	r3, [sp, #4]
 234:Core/Src/main.c ****   {
 462              		.loc 1 234 3 is_stmt 1 view .LVU102
 234:Core/Src/main.c ****   {
 463              		.loc 1 234 7 is_stmt 0 view .LVU103
 464 0046 6946     		mov	r1, sp
 465 0048 0648     		ldr	r0, .L32
 466 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 467              	.LVL30:
 234:Core/Src/main.c ****   {
 468              		.loc 1 234 6 view .LVU104
 469 004e 30B9     		cbnz	r0, .L31
 241:Core/Src/main.c **** 
 470              		.loc 1 241 1 view .LVU105
 471 0050 07B0     		add	sp, sp, #28
 472              	.LCFI8:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 18


 473              		.cfi_remember_state
 474              		.cfi_def_cfa_offset 4
 475              		@ sp needed
 476 0052 5DF804FB 		ldr	pc, [sp], #4
 477              	.L29:
 478              	.LCFI9:
 479              		.cfi_restore_state
 225:Core/Src/main.c ****   }
 480              		.loc 1 225 5 is_stmt 1 view .LVU106
 481 0056 FFF7FEFF 		bl	Error_Handler
 482              	.LVL31:
 483              	.L30:
 230:Core/Src/main.c ****   }
 484              		.loc 1 230 5 view .LVU107
 485 005a FFF7FEFF 		bl	Error_Handler
 486              	.LVL32:
 487              	.L31:
 236:Core/Src/main.c ****   }
 488              		.loc 1 236 5 view .LVU108
 489 005e FFF7FEFF 		bl	Error_Handler
 490              	.LVL33:
 491              	.L33:
 492 0062 00BF     		.align	2
 493              	.L32:
 494 0064 00000000 		.word	htim2
 495              		.cfi_endproc
 496              	.LFE69:
 498              		.section	.text.SystemClock_Config,"ax",%progbits
 499              		.align	1
 500              		.global	SystemClock_Config
 501              		.syntax unified
 502              		.thumb
 503              		.thumb_func
 505              	SystemClock_Config:
 506              	.LFB68:
 169:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 507              		.loc 1 169 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 64
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511 0000 00B5     		push	{lr}
 512              	.LCFI10:
 513              		.cfi_def_cfa_offset 4
 514              		.cfi_offset 14, -4
 515 0002 91B0     		sub	sp, sp, #68
 516              	.LCFI11:
 517              		.cfi_def_cfa_offset 72
 170:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 518              		.loc 1 170 3 view .LVU110
 170:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 519              		.loc 1 170 22 is_stmt 0 view .LVU111
 520 0004 2822     		movs	r2, #40
 521 0006 0021     		movs	r1, #0
 522 0008 06A8     		add	r0, sp, #24
 523 000a FFF7FEFF 		bl	memset
 524              	.LVL34:
 171:Core/Src/main.c **** 
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 19


 525              		.loc 1 171 3 is_stmt 1 view .LVU112
 171:Core/Src/main.c **** 
 526              		.loc 1 171 22 is_stmt 0 view .LVU113
 527 000e 0023     		movs	r3, #0
 528 0010 0193     		str	r3, [sp, #4]
 529 0012 0293     		str	r3, [sp, #8]
 530 0014 0393     		str	r3, [sp, #12]
 531 0016 0493     		str	r3, [sp, #16]
 532 0018 0593     		str	r3, [sp, #20]
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 533              		.loc 1 176 3 is_stmt 1 view .LVU114
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 534              		.loc 1 176 36 is_stmt 0 view .LVU115
 535 001a 0223     		movs	r3, #2
 536 001c 0693     		str	r3, [sp, #24]
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 537              		.loc 1 177 3 is_stmt 1 view .LVU116
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 538              		.loc 1 177 30 is_stmt 0 view .LVU117
 539 001e 0123     		movs	r3, #1
 540 0020 0A93     		str	r3, [sp, #40]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 541              		.loc 1 178 3 is_stmt 1 view .LVU118
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 542              		.loc 1 178 41 is_stmt 0 view .LVU119
 543 0022 1023     		movs	r3, #16
 544 0024 0B93     		str	r3, [sp, #44]
 179:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 545              		.loc 1 179 3 is_stmt 1 view .LVU120
 180:Core/Src/main.c ****   {
 546              		.loc 1 180 3 view .LVU121
 180:Core/Src/main.c ****   {
 547              		.loc 1 180 7 is_stmt 0 view .LVU122
 548 0026 06A8     		add	r0, sp, #24
 549 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 550              	.LVL35:
 180:Core/Src/main.c ****   {
 551              		.loc 1 180 6 view .LVU123
 552 002c 68B9     		cbnz	r0, .L38
 187:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 553              		.loc 1 187 3 is_stmt 1 view .LVU124
 187:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 554              		.loc 1 187 31 is_stmt 0 view .LVU125
 555 002e 0F23     		movs	r3, #15
 556 0030 0193     		str	r3, [sp, #4]
 188:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 557              		.loc 1 188 3 is_stmt 1 view .LVU126
 188:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 558              		.loc 1 188 34 is_stmt 0 view .LVU127
 559 0032 0021     		movs	r1, #0
 560 0034 0291     		str	r1, [sp, #8]
 189:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 561              		.loc 1 189 3 is_stmt 1 view .LVU128
 189:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 562              		.loc 1 189 35 is_stmt 0 view .LVU129
 563 0036 0391     		str	r1, [sp, #12]
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 20


 564              		.loc 1 190 3 is_stmt 1 view .LVU130
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 565              		.loc 1 190 36 is_stmt 0 view .LVU131
 566 0038 0491     		str	r1, [sp, #16]
 191:Core/Src/main.c **** 
 567              		.loc 1 191 3 is_stmt 1 view .LVU132
 191:Core/Src/main.c **** 
 568              		.loc 1 191 36 is_stmt 0 view .LVU133
 569 003a 0591     		str	r1, [sp, #20]
 193:Core/Src/main.c ****   {
 570              		.loc 1 193 3 is_stmt 1 view .LVU134
 193:Core/Src/main.c ****   {
 571              		.loc 1 193 7 is_stmt 0 view .LVU135
 572 003c 01A8     		add	r0, sp, #4
 573 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 574              	.LVL36:
 193:Core/Src/main.c ****   {
 575              		.loc 1 193 6 view .LVU136
 576 0042 20B9     		cbnz	r0, .L39
 197:Core/Src/main.c **** 
 577              		.loc 1 197 1 view .LVU137
 578 0044 11B0     		add	sp, sp, #68
 579              	.LCFI12:
 580              		.cfi_remember_state
 581              		.cfi_def_cfa_offset 4
 582              		@ sp needed
 583 0046 5DF804FB 		ldr	pc, [sp], #4
 584              	.L38:
 585              	.LCFI13:
 586              		.cfi_restore_state
 182:Core/Src/main.c ****   }
 587              		.loc 1 182 5 is_stmt 1 view .LVU138
 588 004a FFF7FEFF 		bl	Error_Handler
 589              	.LVL37:
 590              	.L39:
 195:Core/Src/main.c ****   }
 591              		.loc 1 195 5 view .LVU139
 592 004e FFF7FEFF 		bl	Error_Handler
 593              	.LVL38:
 594              		.cfi_endproc
 595              	.LFE68:
 597              		.section	.text.main,"ax",%progbits
 598              		.align	1
 599              		.global	main
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 604              	main:
 605              	.LFB67:
 116:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 606              		.loc 1 116 1 view -0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610 0000 08B5     		push	{r3, lr}
 611              	.LCFI14:
 612              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 21


 613              		.cfi_offset 3, -8
 614              		.cfi_offset 14, -4
 124:Core/Src/main.c **** 
 615              		.loc 1 124 3 view .LVU141
 616 0002 FFF7FEFF 		bl	HAL_Init
 617              	.LVL39:
 131:Core/Src/main.c **** 
 618              		.loc 1 131 3 view .LVU142
 619 0006 FFF7FEFF 		bl	SystemClock_Config
 620              	.LVL40:
 138:Core/Src/main.c ****   MX_TIM2_Init();
 621              		.loc 1 138 3 view .LVU143
 622 000a FFF7FEFF 		bl	MX_GPIO_Init
 623              	.LVL41:
 139:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 624              		.loc 1 139 3 view .LVU144
 625 000e FFF7FEFF 		bl	MX_TIM2_Init
 626              	.LVL42:
 141:Core/Src/main.c ****   /* USER CODE END 2 */
 627              		.loc 1 141 3 view .LVU145
 628 0012 0C48     		ldr	r0, .L44
 629 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 630              	.LVL43:
 146:Core/Src/main.c ****   int timer = changeState(currentState);
 631              		.loc 1 146 3 view .LVU146
 632 0018 FFF7FEFF 		bl	clearAllLed
 633              	.LVL44:
 147:Core/Src/main.c ****   setTimer1(timer);
 634              		.loc 1 147 3 view .LVU147
 147:Core/Src/main.c ****   setTimer1(timer);
 635              		.loc 1 147 15 is_stmt 0 view .LVU148
 636 001c 0A4B     		ldr	r3, .L44+4
 637 001e 1868     		ldr	r0, [r3]
 638 0020 FFF7FEFF 		bl	changeState
 639              	.LVL45:
 148:Core/Src/main.c ****   while (1)
 640              		.loc 1 148 3 is_stmt 1 view .LVU149
 641 0024 FFF7FEFF 		bl	setTimer1
 642              	.LVL46:
 643              	.L41:
 149:Core/Src/main.c ****   {
 644              		.loc 1 149 3 view .LVU150
 151:Core/Src/main.c ****     {
 645              		.loc 1 151 5 view .LVU151
 151:Core/Src/main.c ****     {
 646              		.loc 1 151 21 is_stmt 0 view .LVU152
 647 0028 084B     		ldr	r3, .L44+8
 648 002a 1B68     		ldr	r3, [r3]
 151:Core/Src/main.c ****     {
 649              		.loc 1 151 8 view .LVU153
 650 002c 012B     		cmp	r3, #1
 651 002e FBD1     		bne	.L41
 153:Core/Src/main.c ****       timer = changeState(currentState);
 652              		.loc 1 153 7 is_stmt 1 view .LVU154
 153:Core/Src/main.c ****       timer = changeState(currentState);
 653              		.loc 1 153 20 is_stmt 0 view .LVU155
 654 0030 074B     		ldr	r3, .L44+12
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 22


 655 0032 1868     		ldr	r0, [r3]
 656 0034 044B     		ldr	r3, .L44+4
 657 0036 1860     		str	r0, [r3]
 154:Core/Src/main.c ****       setTimer1(timer);
 658              		.loc 1 154 7 is_stmt 1 view .LVU156
 154:Core/Src/main.c ****       setTimer1(timer);
 659              		.loc 1 154 15 is_stmt 0 view .LVU157
 660 0038 FFF7FEFF 		bl	changeState
 661              	.LVL47:
 155:Core/Src/main.c ****     }
 662              		.loc 1 155 7 is_stmt 1 view .LVU158
 663 003c FFF7FEFF 		bl	setTimer1
 664              	.LVL48:
 155:Core/Src/main.c ****     }
 665              		.loc 1 155 7 is_stmt 0 view .LVU159
 666 0040 F2E7     		b	.L41
 667              	.L45:
 668 0042 00BF     		.align	2
 669              	.L44:
 670 0044 00000000 		.word	htim2
 671 0048 00000000 		.word	currentState
 672 004c 00000000 		.word	timer1_flag
 673 0050 00000000 		.word	nextState
 674              		.cfi_endproc
 675              	.LFE67:
 677              		.global	nextState
 678              		.section	.bss.nextState,"aw",%nobits
 679              		.align	2
 682              	nextState:
 683 0000 00000000 		.space	4
 684              		.global	currentState
 685              		.section	.bss.currentState,"aw",%nobits
 686              		.align	2
 689              	currentState:
 690 0000 00000000 		.space	4
 691              		.global	htim2
 692              		.section	.bss.htim2,"aw",%nobits
 693              		.align	2
 696              	htim2:
 697 0000 00000000 		.space	72
 697      00000000 
 697      00000000 
 697      00000000 
 697      00000000 
 698              		.text
 699              	.Letext0:
 700              		.file 3 "d:\\armgnu\\12.3 rel1\\arm-none-eabi\\include\\machine\\_default_types.h"
 701              		.file 4 "d:\\armgnu\\12.3 rel1\\arm-none-eabi\\include\\sys\\_stdint.h"
 702              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 703              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 704              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 705              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 706              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 707              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 708              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 709              		.file 12 "Core/Inc/software_time.h"
 710              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 23


 711              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 712              		.file 15 "<built-in>"
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccnqMERA.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:98     .text.MX_GPIO_Init:00000048 $d
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:104    .text.clearAllLed:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:110    .text.clearAllLed:00000000 clearAllLed
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:163    .text.clearAllLed:00000044 $d
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:168    .text.changeState:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:174    .text.changeState:00000000 changeState
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:196    .text.changeState:00000010 $d
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:200    .text.changeState:00000014 $t
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:314    .text.changeState:0000009c $d
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:682    .bss.nextState:00000000 nextState
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:320    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:326    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:348    .text.Error_Handler:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:354    .text.Error_Handler:00000000 Error_Handler
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:386    .text.MX_TIM2_Init:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:391    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:494    .text.MX_TIM2_Init:00000064 $d
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:696    .bss.htim2:00000000 htim2
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:499    .text.SystemClock_Config:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:505    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:598    .text.main:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:604    .text.main:00000000 main
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:670    .text.main:00000044 $d
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:689    .bss.currentState:00000000 currentState
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:679    .bss.nextState:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:686    .bss.currentState:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccnqMERA.s:693    .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
timerRun
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
setTimer1
timer1_flag
